{
  "version": 3,
  "sources": ["../../echarts/lib/coord/geo/fix/textCoord.js", "../../echarts/lib/data/Graph.js", "../../echarts/lib/data/helper/linkSeriesData.js", "../../echarts/lib/coord/cartesian/Cartesian.js"],
  "sourcesContent": ["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar coordsOffsetMap = {\r\n  '南海诸岛': [32, 80],\r\n  // 全国\r\n  '广东': [0, -10],\r\n  '香港': [10, 5],\r\n  '澳门': [-10, 10],\r\n  // '北京': [-10, 0],\r\n  '天津': [5, 5]\r\n};\r\nexport default function fixTextCoords(mapType, region) {\r\n  if (mapType === 'china') {\r\n    var coordFix = coordsOffsetMap[region.name];\r\n\r\n    if (coordFix) {\r\n      var cp = region.getCenter();\r\n      cp[0] += coordFix[0] / 10.5;\r\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\r\n      region.setCenter(cp);\r\n    }\r\n  }\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util.js'; // id may be function name of Object, add a prefix to avoid this problem.\r\n\r\nfunction generateNodeKey(id) {\r\n  return '_EC_' + id;\r\n}\r\n\r\nvar Graph =\r\n/** @class */\r\nfunction () {\r\n  function Graph(directed) {\r\n    this.type = 'graph';\r\n    this.nodes = [];\r\n    this.edges = [];\r\n    this._nodesMap = {};\r\n    /**\r\n     * @type {Object.<string, module:echarts/data/Graph.Edge>}\r\n     * @private\r\n     */\r\n\r\n    this._edgesMap = {};\r\n    this._directed = directed || false;\r\n  }\r\n  /**\r\n   * If is directed graph\r\n   */\r\n\r\n\r\n  Graph.prototype.isDirected = function () {\r\n    return this._directed;\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Add a new node\r\n   */\r\n\r\n  Graph.prototype.addNode = function (id, dataIndex) {\r\n    id = id == null ? '' + dataIndex : '' + id;\r\n    var nodesMap = this._nodesMap;\r\n\r\n    if (nodesMap[generateNodeKey(id)]) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.error('Graph nodes have duplicate name or id');\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    var node = new GraphNode(id, dataIndex);\r\n    node.hostGraph = this;\r\n    this.nodes.push(node);\r\n    nodesMap[generateNodeKey(id)] = node;\r\n    return node;\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Get node by data index\r\n   */\r\n\r\n  Graph.prototype.getNodeByIndex = function (dataIndex) {\r\n    var rawIdx = this.data.getRawIndex(dataIndex);\r\n    return this.nodes[rawIdx];\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Get node by id\r\n   */\r\n\r\n  Graph.prototype.getNodeById = function (id) {\r\n    return this._nodesMap[generateNodeKey(id)];\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Add a new edge\r\n   */\r\n\r\n  Graph.prototype.addEdge = function (n1, n2, dataIndex) {\r\n    var nodesMap = this._nodesMap;\r\n    var edgesMap = this._edgesMap; // PENDING\r\n\r\n    if (zrUtil.isNumber(n1)) {\r\n      n1 = this.nodes[n1];\r\n    }\r\n\r\n    if (zrUtil.isNumber(n2)) {\r\n      n2 = this.nodes[n2];\r\n    }\r\n\r\n    if (!(n1 instanceof GraphNode)) {\r\n      n1 = nodesMap[generateNodeKey(n1)];\r\n    }\r\n\r\n    if (!(n2 instanceof GraphNode)) {\r\n      n2 = nodesMap[generateNodeKey(n2)];\r\n    }\r\n\r\n    if (!n1 || !n2) {\r\n      return;\r\n    }\r\n\r\n    var key = n1.id + '-' + n2.id;\r\n    var edge = new GraphEdge(n1, n2, dataIndex);\r\n    edge.hostGraph = this;\r\n\r\n    if (this._directed) {\r\n      n1.outEdges.push(edge);\r\n      n2.inEdges.push(edge);\r\n    }\r\n\r\n    n1.edges.push(edge);\r\n\r\n    if (n1 !== n2) {\r\n      n2.edges.push(edge);\r\n    }\r\n\r\n    this.edges.push(edge);\r\n    edgesMap[key] = edge;\r\n    return edge;\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Get edge by data index\r\n   */\r\n\r\n  Graph.prototype.getEdgeByIndex = function (dataIndex) {\r\n    var rawIdx = this.edgeData.getRawIndex(dataIndex);\r\n    return this.edges[rawIdx];\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Get edge by two linked nodes\r\n   */\r\n\r\n  Graph.prototype.getEdge = function (n1, n2) {\r\n    if (n1 instanceof GraphNode) {\r\n      n1 = n1.id;\r\n    }\r\n\r\n    if (n2 instanceof GraphNode) {\r\n      n2 = n2.id;\r\n    }\r\n\r\n    var edgesMap = this._edgesMap;\r\n\r\n    if (this._directed) {\r\n      return edgesMap[n1 + '-' + n2];\r\n    } else {\r\n      return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\r\n    }\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Iterate all nodes\r\n   */\r\n\r\n  Graph.prototype.eachNode = function (cb, context) {\r\n    var nodes = this.nodes;\r\n    var len = nodes.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      if (nodes[i].dataIndex >= 0) {\r\n        cb.call(context, nodes[i], i);\r\n      }\r\n    }\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Iterate all edges\r\n   */\r\n\r\n  Graph.prototype.eachEdge = function (cb, context) {\r\n    var edges = this.edges;\r\n    var len = edges.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\r\n        cb.call(context, edges[i], i);\r\n      }\r\n    }\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Breadth first traverse\r\n   * Return true to stop traversing\r\n   */\r\n\r\n  Graph.prototype.breadthFirstTraverse = function (cb, startNode, direction, context) {\r\n    if (!(startNode instanceof GraphNode)) {\r\n      startNode = this._nodesMap[generateNodeKey(startNode)];\r\n    }\r\n\r\n    if (!startNode) {\r\n      return;\r\n    }\r\n\r\n    var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\r\n\r\n    for (var i = 0; i < this.nodes.length; i++) {\r\n      this.nodes[i].__visited = false;\r\n    }\r\n\r\n    if (cb.call(context, startNode, null)) {\r\n      return;\r\n    }\r\n\r\n    var queue = [startNode];\r\n\r\n    while (queue.length) {\r\n      var currentNode = queue.shift();\r\n      var edges = currentNode[edgeType];\r\n\r\n      for (var i = 0; i < edges.length; i++) {\r\n        var e = edges[i];\r\n        var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\r\n\r\n        if (!otherNode.__visited) {\r\n          if (cb.call(context, otherNode, currentNode)) {\r\n            // Stop traversing\r\n            return;\r\n          }\r\n\r\n          queue.push(otherNode);\r\n          otherNode.__visited = true;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  ; // TODO\r\n  // depthFirstTraverse(\r\n  //     cb, startNode, direction, context\r\n  // ) {\r\n  // };\r\n  // Filter update\r\n\r\n  Graph.prototype.update = function () {\r\n    var data = this.data;\r\n    var edgeData = this.edgeData;\r\n    var nodes = this.nodes;\r\n    var edges = this.edges;\r\n\r\n    for (var i = 0, len = nodes.length; i < len; i++) {\r\n      nodes[i].dataIndex = -1;\r\n    }\r\n\r\n    for (var i = 0, len = data.count(); i < len; i++) {\r\n      nodes[data.getRawIndex(i)].dataIndex = i;\r\n    }\r\n\r\n    edgeData.filterSelf(function (idx) {\r\n      var edge = edges[edgeData.getRawIndex(idx)];\r\n      return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\r\n    }); // Update edge\r\n\r\n    for (var i = 0, len = edges.length; i < len; i++) {\r\n      edges[i].dataIndex = -1;\r\n    }\r\n\r\n    for (var i = 0, len = edgeData.count(); i < len; i++) {\r\n      edges[edgeData.getRawIndex(i)].dataIndex = i;\r\n    }\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * @return {module:echarts/data/Graph}\r\n   */\r\n\r\n  Graph.prototype.clone = function () {\r\n    var graph = new Graph(this._directed);\r\n    var nodes = this.nodes;\r\n    var edges = this.edges;\r\n\r\n    for (var i = 0; i < nodes.length; i++) {\r\n      graph.addNode(nodes[i].id, nodes[i].dataIndex);\r\n    }\r\n\r\n    for (var i = 0; i < edges.length; i++) {\r\n      var e = edges[i];\r\n      graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\r\n    }\r\n\r\n    return graph;\r\n  };\r\n\r\n  ;\r\n  return Graph;\r\n}();\r\n\r\nvar GraphNode =\r\n/** @class */\r\nfunction () {\r\n  function GraphNode(id, dataIndex) {\r\n    this.inEdges = [];\r\n    this.outEdges = [];\r\n    this.edges = [];\r\n    this.dataIndex = -1;\r\n    this.id = id == null ? '' : id;\r\n    this.dataIndex = dataIndex == null ? -1 : dataIndex;\r\n  }\r\n  /**\r\n   * @return {number}\r\n   */\r\n\r\n\r\n  GraphNode.prototype.degree = function () {\r\n    return this.edges.length;\r\n  };\r\n  /**\r\n   * @return {number}\r\n   */\r\n\r\n\r\n  GraphNode.prototype.inDegree = function () {\r\n    return this.inEdges.length;\r\n  };\r\n  /**\r\n  * @return {number}\r\n  */\r\n\r\n\r\n  GraphNode.prototype.outDegree = function () {\r\n    return this.outEdges.length;\r\n  };\r\n\r\n  GraphNode.prototype.getModel = function (path) {\r\n    if (this.dataIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    var graph = this.hostGraph;\r\n    var itemModel = graph.data.getItemModel(this.dataIndex);\r\n    return itemModel.getModel(path);\r\n  };\r\n\r\n  GraphNode.prototype.getAdjacentDataIndices = function () {\r\n    var dataIndices = {\r\n      edge: [],\r\n      node: []\r\n    };\r\n\r\n    for (var i = 0; i < this.edges.length; i++) {\r\n      var adjacentEdge = this.edges[i];\r\n\r\n      if (adjacentEdge.dataIndex < 0) {\r\n        continue;\r\n      }\r\n\r\n      dataIndices.edge.push(adjacentEdge.dataIndex);\r\n      dataIndices.node.push(adjacentEdge.node1.dataIndex, adjacentEdge.node2.dataIndex);\r\n    }\r\n\r\n    return dataIndices;\r\n  };\r\n\r\n  GraphNode.prototype.getTrajectoryDataIndices = function () {\r\n    var connectedEdgesMap = zrUtil.createHashMap();\r\n    var connectedNodesMap = zrUtil.createHashMap();\r\n\r\n    for (var i = 0; i < this.edges.length; i++) {\r\n      var adjacentEdge = this.edges[i];\r\n\r\n      if (adjacentEdge.dataIndex < 0) {\r\n        continue;\r\n      }\r\n\r\n      connectedEdgesMap.set(adjacentEdge.dataIndex, true);\r\n      var sourceNodesQueue = [adjacentEdge.node1];\r\n      var targetNodesQueue = [adjacentEdge.node2];\r\n      var nodeIteratorIndex = 0;\r\n\r\n      while (nodeIteratorIndex < sourceNodesQueue.length) {\r\n        var sourceNode = sourceNodesQueue[nodeIteratorIndex];\r\n        nodeIteratorIndex++;\r\n        connectedNodesMap.set(sourceNode.dataIndex, true);\r\n\r\n        for (var j = 0; j < sourceNode.inEdges.length; j++) {\r\n          connectedEdgesMap.set(sourceNode.inEdges[j].dataIndex, true);\r\n          sourceNodesQueue.push(sourceNode.inEdges[j].node1);\r\n        }\r\n      }\r\n\r\n      nodeIteratorIndex = 0;\r\n\r\n      while (nodeIteratorIndex < targetNodesQueue.length) {\r\n        var targetNode = targetNodesQueue[nodeIteratorIndex];\r\n        nodeIteratorIndex++;\r\n        connectedNodesMap.set(targetNode.dataIndex, true);\r\n\r\n        for (var j = 0; j < targetNode.outEdges.length; j++) {\r\n          connectedEdgesMap.set(targetNode.outEdges[j].dataIndex, true);\r\n          targetNodesQueue.push(targetNode.outEdges[j].node2);\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      edge: connectedEdgesMap.keys(),\r\n      node: connectedNodesMap.keys()\r\n    };\r\n  };\r\n\r\n  return GraphNode;\r\n}();\r\n\r\nvar GraphEdge =\r\n/** @class */\r\nfunction () {\r\n  function GraphEdge(n1, n2, dataIndex) {\r\n    this.dataIndex = -1;\r\n    this.node1 = n1;\r\n    this.node2 = n2;\r\n    this.dataIndex = dataIndex == null ? -1 : dataIndex;\r\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\r\n\r\n  GraphEdge.prototype.getModel = function (path) {\r\n    if (this.dataIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    var graph = this.hostGraph;\r\n    var itemModel = graph.edgeData.getItemModel(this.dataIndex);\r\n    return itemModel.getModel(path);\r\n  };\r\n\r\n  GraphEdge.prototype.getAdjacentDataIndices = function () {\r\n    return {\r\n      edge: [this.dataIndex],\r\n      node: [this.node1.dataIndex, this.node2.dataIndex]\r\n    };\r\n  };\r\n\r\n  GraphEdge.prototype.getTrajectoryDataIndices = function () {\r\n    var connectedEdgesMap = zrUtil.createHashMap();\r\n    var connectedNodesMap = zrUtil.createHashMap();\r\n    connectedEdgesMap.set(this.dataIndex, true);\r\n    var sourceNodes = [this.node1];\r\n    var targetNodes = [this.node2];\r\n    var nodeIteratorIndex = 0;\r\n\r\n    while (nodeIteratorIndex < sourceNodes.length) {\r\n      var sourceNode = sourceNodes[nodeIteratorIndex];\r\n      nodeIteratorIndex++;\r\n      connectedNodesMap.set(sourceNode.dataIndex, true);\r\n\r\n      for (var j = 0; j < sourceNode.inEdges.length; j++) {\r\n        connectedEdgesMap.set(sourceNode.inEdges[j].dataIndex, true);\r\n        sourceNodes.push(sourceNode.inEdges[j].node1);\r\n      }\r\n    }\r\n\r\n    nodeIteratorIndex = 0;\r\n\r\n    while (nodeIteratorIndex < targetNodes.length) {\r\n      var targetNode = targetNodes[nodeIteratorIndex];\r\n      nodeIteratorIndex++;\r\n      connectedNodesMap.set(targetNode.dataIndex, true);\r\n\r\n      for (var j = 0; j < targetNode.outEdges.length; j++) {\r\n        connectedEdgesMap.set(targetNode.outEdges[j].dataIndex, true);\r\n        targetNodes.push(targetNode.outEdges[j].node2);\r\n      }\r\n    }\r\n\r\n    return {\r\n      edge: connectedEdgesMap.keys(),\r\n      node: connectedNodesMap.keys()\r\n    };\r\n  };\r\n\r\n  return GraphEdge;\r\n}();\r\n\r\nfunction createGraphDataProxyMixin(hostName, dataName) {\r\n  return {\r\n    /**\r\n     * @param Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\r\n     */\r\n    getValue: function (dimension) {\r\n      var data = this[hostName][dataName];\r\n      return data.getStore().get(data.getDimensionIndex(dimension || 'value'), this.dataIndex);\r\n    },\r\n    // TODO: TYPE stricter type.\r\n    setVisual: function (key, value) {\r\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\r\n    },\r\n    getVisual: function (key) {\r\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key);\r\n    },\r\n    setLayout: function (layout, merge) {\r\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\r\n    },\r\n    getLayout: function () {\r\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\r\n    },\r\n    getGraphicEl: function () {\r\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\r\n    },\r\n    getRawIndex: function () {\r\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\r\n    }\r\n  };\r\n}\r\n\r\n;\r\n;\r\n;\r\nzrUtil.mixin(GraphNode, createGraphDataProxyMixin('hostGraph', 'data'));\r\nzrUtil.mixin(GraphEdge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\r\nexport default Graph;\r\nexport { GraphNode, GraphEdge };", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Link lists and struct (graph or tree)\r\n */\r\nimport { curry, each, assert, extend, map, keys } from 'zrender/lib/core/util.js';\r\nimport { makeInner } from '../../util/model.js';\r\nvar inner = makeInner();\r\n\r\nfunction linkSeriesData(opt) {\r\n  var mainData = opt.mainData;\r\n  var datas = opt.datas;\r\n\r\n  if (!datas) {\r\n    datas = {\r\n      main: mainData\r\n    };\r\n    opt.datasAttr = {\r\n      main: 'data'\r\n    };\r\n  }\r\n\r\n  opt.datas = opt.mainData = null;\r\n  linkAll(mainData, datas, opt); // Porxy data original methods.\r\n\r\n  each(datas, function (data) {\r\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\r\n      data.wrapMethod(methodName, curry(transferInjection, opt));\r\n    });\r\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\r\n\r\n  mainData.wrapMethod('cloneShallow', curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\r\n  // another changable methods, which may bring about dead lock.\r\n\r\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\r\n    mainData.wrapMethod(methodName, curry(changeInjection, opt));\r\n  }); // Make sure datas contains mainData.\r\n\r\n  assert(datas[mainData.dataType] === mainData);\r\n}\r\n\r\nfunction transferInjection(opt, res) {\r\n  if (isMainData(this)) {\r\n    // Transfer datas to new main data.\r\n    var datas = extend({}, inner(this).datas);\r\n    datas[this.dataType] = res;\r\n    linkAll(res, datas, opt);\r\n  } else {\r\n    // Modify the reference in main data to point newData.\r\n    linkSingle(res, this.dataType, inner(this).mainData, opt);\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nfunction changeInjection(opt, res) {\r\n  opt.struct && opt.struct.update();\r\n  return res;\r\n}\r\n\r\nfunction cloneShallowInjection(opt, res) {\r\n  // cloneShallow, which brings about some fragilities, may be inappropriate\r\n  // to be exposed as an API. So for implementation simplicity we can make\r\n  // the restriction that cloneShallow of not-mainData should not be invoked\r\n  // outside, but only be invoked here.\r\n  each(inner(res).datas, function (data, dataType) {\r\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\r\n  });\r\n  return res;\r\n}\r\n/**\r\n * Supplement method to List.\r\n *\r\n * @public\r\n * @param [dataType] If not specified, return mainData.\r\n */\r\n\r\n\r\nfunction getLinkedData(dataType) {\r\n  var mainData = inner(this).mainData;\r\n  return dataType == null || mainData == null ? mainData : inner(mainData).datas[dataType];\r\n}\r\n/**\r\n * Get list of all linked data\r\n */\r\n\r\n\r\nfunction getLinkedDataAll() {\r\n  var mainData = inner(this).mainData;\r\n  return mainData == null ? [{\r\n    data: mainData\r\n  }] : map(keys(inner(mainData).datas), function (type) {\r\n    return {\r\n      type: type,\r\n      data: inner(mainData).datas[type]\r\n    };\r\n  });\r\n}\r\n\r\nfunction isMainData(data) {\r\n  return inner(data).mainData === data;\r\n}\r\n\r\nfunction linkAll(mainData, datas, opt) {\r\n  inner(mainData).datas = {};\r\n  each(datas, function (data, dataType) {\r\n    linkSingle(data, dataType, mainData, opt);\r\n  });\r\n}\r\n\r\nfunction linkSingle(data, dataType, mainData, opt) {\r\n  inner(mainData).datas[dataType] = data;\r\n  inner(data).mainData = mainData;\r\n  data.dataType = dataType;\r\n\r\n  if (opt.struct) {\r\n    data[opt.structAttr] = opt.struct;\r\n    opt.struct[opt.datasAttr[dataType]] = data;\r\n  } // Supplement method.\r\n\r\n\r\n  data.getLinkedData = getLinkedData;\r\n  data.getLinkedDataAll = getLinkedDataAll;\r\n}\r\n\r\nexport default linkSeriesData;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util.js';\r\n\r\nvar Cartesian =\r\n/** @class */\r\nfunction () {\r\n  function Cartesian(name) {\r\n    this.type = 'cartesian';\r\n    this._dimList = [];\r\n    this._axes = {};\r\n    this.name = name || '';\r\n  }\r\n\r\n  Cartesian.prototype.getAxis = function (dim) {\r\n    return this._axes[dim];\r\n  };\r\n\r\n  Cartesian.prototype.getAxes = function () {\r\n    return zrUtil.map(this._dimList, function (dim) {\r\n      return this._axes[dim];\r\n    }, this);\r\n  };\r\n\r\n  Cartesian.prototype.getAxesByScale = function (scaleType) {\r\n    scaleType = scaleType.toLowerCase();\r\n    return zrUtil.filter(this.getAxes(), function (axis) {\r\n      return axis.scale.type === scaleType;\r\n    });\r\n  };\r\n\r\n  Cartesian.prototype.addAxis = function (axis) {\r\n    var dim = axis.dim;\r\n    this._axes[dim] = axis;\r\n\r\n    this._dimList.push(dim);\r\n  };\r\n\r\n  return Cartesian;\r\n}();\r\n\r\n;\r\nexport default Cartesian;"],
  "mappings": "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",
  "names": ["Graph", "GraphNode", "GraphEdge", "Cartesian"]
}
