{
  "version": 3,
  "sources": ["../../echarts/theme/dark-bold.js"],
  "sourcesContent": ["/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\n(function(root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define(['exports', 'echarts'], factory);\r\n    } else if (\r\n        typeof exports === 'object' &&\r\n        typeof exports.nodeName !== 'string'\r\n    ) {\r\n        // CommonJS\r\n        factory(exports, require('echarts/lib/echarts'));\r\n    } else {\r\n        // Browser globals\r\n        factory({}, root.echarts);\r\n    }\r\n})(this, function(exports, echarts) {\r\n    var log = function(msg) {\r\n        if (typeof console !== 'undefined') {\r\n            console && console.error && console.error(msg);\r\n        }\r\n    };\r\n    if (!echarts) {\r\n        log('ECharts is not Loaded');\r\n        return;\r\n    }\r\n    var contrastColor = '#eee';\r\n    var axisCommon = function() {\r\n        return {\r\n            axisLine: {\r\n                lineStyle: {\r\n                    color: contrastColor\r\n                }\r\n            },\r\n            axisTick: {\r\n                lineStyle: {\r\n                    color: contrastColor\r\n                }\r\n            },\r\n            axisLabel: {\r\n                color: contrastColor\r\n            },\r\n            splitLine: {\r\n                lineStyle: {\r\n                    type: 'dashed',\r\n                    color: '#aaa'\r\n                }\r\n            },\r\n            splitArea: {\r\n                areaStyle: {\r\n                    color: contrastColor\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    var colorPalette = [\r\n        '#458c6b',\r\n        '#f2da87',\r\n        '#d9a86c',\r\n        '#d94436',\r\n        '#a62424',\r\n        '#76bc9b',\r\n        '#cce6da',\r\n        '#eeeeee'\r\n    ];\r\n    var theme = {\r\n        color: colorPalette,\r\n        backgroundColor: '#333',\r\n        tooltip: {\r\n            axisPointer: {\r\n                lineStyle: {\r\n                    color: contrastColor\r\n                },\r\n                crossStyle: {\r\n                    color: contrastColor\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            textStyle: {\r\n                color: contrastColor\r\n            }\r\n        },\r\n        title: {\r\n            textStyle: {\r\n                color: contrastColor\r\n            }\r\n        },\r\n        toolbox: {\r\n            iconStyle: {\r\n                borderColor: contrastColor\r\n            }\r\n        },\r\n\r\n        // Area scaling controller\r\n        dataZoom: {\r\n            dataBackgroundColor: '#eee', // Data background color\r\n            fillerColor: 'rgba(200,200,200,0.2)', // Fill the color\r\n            handleColor: '#458c6b' // Handle color\r\n        },\r\n\r\n        timeline: {\r\n            itemStyle: {\r\n                color: colorPalette[1]\r\n            },\r\n            lineStyle: {\r\n                color: contrastColor\r\n            },\r\n            controlStyle: {\r\n                color: contrastColor,\r\n                borderColor: contrastColor\r\n            },\r\n            label: {\r\n                color: contrastColor\r\n            }\r\n        },\r\n\r\n        timeAxis: axisCommon(),\r\n        logAxis: axisCommon(),\r\n        valueAxis: axisCommon(),\r\n        categoryAxis: axisCommon(),\r\n\r\n        line: {\r\n            symbol: 'circle'\r\n        },\r\n        graph: {\r\n            color: colorPalette\r\n        },\r\n\r\n        gauge: {\r\n            axisLine: {\r\n                lineStyle: {\r\n                    color: [\r\n                        [0.2, '#f2da87'],\r\n                        [0.8, '#458c6b'],\r\n                        [1, '#a62424']\r\n                    ],\r\n                    width: 8\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    theme.categoryAxis.splitLine.show = false;\r\n    echarts.registerTheme('dark-bold', theme);\r\n});\r\n"],
  "mappings": "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",
  "names": ["exports"]
}
