/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The AddProjectForm model module.
 * @module com.mn.sdk.model/AddProjectForm
 * @version 1.0
 */
export class AddProjectForm {
  /**
   * Constructs a new <code>AddProjectForm</code>.
   * 添加项目与的参数
   * @alias module:com.mn.sdk.model/AddProjectForm
   * @class
   * @param createdType {Number} 创建类型 0 自由项目，1 模板项目，2 复制项目
   * @param deviceFrom {Number} 设备来源 0 内部设备 1 第三方设备
   * @param name {String} 项目名称
   * @param permissionGroupId {String} 项目权限组Id
   * @param remark {String} 备注
   * @param sort {Number} 排序号
   * @param sourceId {String} 模板id或项目id
   */
  constructor(createdType, deviceFrom, name, permissionGroupId, remark, sort, sourceId) {
    this.createdType = createdType;
    this.deviceFrom = deviceFrom;
    this.name = name;
    this.permissionGroupId = permissionGroupId;
    this.remark = remark;
    this.sort = sort;
    this.sourceId = sourceId;
  }


    static constructFromList(list) {
        let array = [new AddProjectForm()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(AddProjectForm.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>AddProjectForm</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/AddProjectForm} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/AddProjectForm} The populated <code>AddProjectForm</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AddProjectForm();
      if (Reflect.has(data, 'createdType'))
        obj.createdType = ApiClient.convertToType(data['createdType'], 'Number');
      if (Reflect.has(data, 'deviceFrom'))
        obj.deviceFrom = ApiClient.convertToType(data['deviceFrom'], 'Number');
      if (Reflect.has(data, 'name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (Reflect.has(data, 'permissionGroupId'))
        obj.permissionGroupId = ApiClient.convertToType(data['permissionGroupId'], 'String');
      if (Reflect.has(data, 'remark'))
        obj.remark = ApiClient.convertToType(data['remark'], 'String');
      if (Reflect.has(data, 'sort'))
        obj.sort = ApiClient.convertToType(data['sort'], 'Number');
      if (Reflect.has(data, 'sourceId'))
        obj.sourceId = ApiClient.convertToType(data['sourceId'], 'String');
    }
    return obj;
  }
}

/**
 * 创建类型 0 自由项目，1 模板项目，2 复制项目
 * @member {Number} createdType
 */
AddProjectForm.prototype.createdType = undefined;

/**
 * 设备来源 0 内部设备 1 第三方设备
 * @member {Number} deviceFrom
 */
AddProjectForm.prototype.deviceFrom = undefined;

/**
 * 项目名称
 * @member {String} name
 */
AddProjectForm.prototype.name = undefined;

/**
 * 项目权限组Id
 * @member {String} permissionGroupId
 */
AddProjectForm.prototype.permissionGroupId = undefined;

/**
 * 备注
 * @member {String} remark
 */
AddProjectForm.prototype.remark = undefined;

/**
 * 排序号
 * @member {Number} sort
 */
AddProjectForm.prototype.sort = undefined;

/**
 * 模板id或项目id
 * @member {String} sourceId
 */
AddProjectForm.prototype.sourceId = undefined;


