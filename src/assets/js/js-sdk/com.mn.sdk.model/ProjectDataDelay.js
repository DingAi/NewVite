/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The ProjectDataDelay model module.
 * @module com.mn.sdk.model/ProjectDataDelay
 * @version 1.0
 */
export class ProjectDataDelay {
  /**
   * Constructs a new <code>ProjectDataDelay</code>.
   * 控制变量成功后，数据采集也许不能立即显示控制的值。设置延迟间隔会立即显示控制的值。
   * @alias module:com.mn.sdk.model/ProjectDataDelay
   * @class
   * @param controlDelay {String} 控制延迟：1开启，0关闭 
   * @param delayInterval {Number} 延迟间隔(秒) 
   * @param projectId {String} 项目ID 
   */
  constructor(controlDelay, delayInterval, projectId) {
    this.controlDelay = controlDelay;
    this.delayInterval = delayInterval;
    this.projectId = projectId;
  }


    static constructFromList(list) {
        let array = [new ProjectDataDelay()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(ProjectDataDelay.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>ProjectDataDelay</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/ProjectDataDelay} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/ProjectDataDelay} The populated <code>ProjectDataDelay</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ProjectDataDelay();
      if (Reflect.has(data, 'controlDelay'))
        obj.controlDelay = ApiClient.convertToType(data['controlDelay'], 'String');
      if (Reflect.has(data, 'delayInterval'))
        obj.delayInterval = ApiClient.convertToType(data['delayInterval'], 'Number');
      if (Reflect.has(data, 'projectId'))
        obj.projectId = ApiClient.convertToType(data['projectId'], 'String');
    }
    return obj;
  }
}

/**
 * 控制延迟：1开启，0关闭 
 * @member {String} controlDelay
 */
ProjectDataDelay.prototype.controlDelay = undefined;

/**
 * 延迟间隔(秒) 
 * @member {Number} delayInterval
 */
ProjectDataDelay.prototype.delayInterval = undefined;

/**
 * 项目ID 
 * @member {String} projectId
 */
ProjectDataDelay.prototype.projectId = undefined;


