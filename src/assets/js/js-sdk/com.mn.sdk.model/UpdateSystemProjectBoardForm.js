/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The UpdateSystemProjectBoardForm model module.
 * @module com.mn.sdk.model/UpdateSystemProjectBoardForm
 * @version 1.0
 */
export class UpdateSystemProjectBoardForm {
  /**
   * Constructs a new <code>UpdateSystemProjectBoardForm</code>.
   * 修改项目看板传输类
   * @alias module:com.mn.sdk.model/UpdateSystemProjectBoardForm
   * @class
   * @param id {String} 项目看板Id
   * @param phoneEnable {Boolean} 是否在移动端使用项目看板 true:使用  false:不使用
   * @param sort {Number} 项目看板序列号
   * @param useEnable {Boolean} 是否使用项目看板 true:使用  false:不使用
   */
  constructor(id, phoneEnable, sort, useEnable) {
    this.id = id;
    this.phoneEnable = phoneEnable;
    this.sort = sort;
    this.useEnable = useEnable;
  }


    static constructFromList(list) {
        let array = [new UpdateSystemProjectBoardForm()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(UpdateSystemProjectBoardForm.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>UpdateSystemProjectBoardForm</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/UpdateSystemProjectBoardForm} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/UpdateSystemProjectBoardForm} The populated <code>UpdateSystemProjectBoardForm</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new UpdateSystemProjectBoardForm();
      if (Reflect.has(data, 'id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (Reflect.has(data, 'phoneEnable'))
        obj.phoneEnable = ApiClient.convertToType(data['phoneEnable'], 'Boolean');
      if (Reflect.has(data, 'sort'))
        obj.sort = ApiClient.convertToType(data['sort'], 'Number');
      if (Reflect.has(data, 'useEnable'))
        obj.useEnable = ApiClient.convertToType(data['useEnable'], 'Boolean');
    }
    return obj;
  }
}

/**
 * 项目看板Id
 * @member {String} id
 */
UpdateSystemProjectBoardForm.prototype.id = undefined;

/**
 * 是否在移动端使用项目看板 true:使用  false:不使用
 * @member {Boolean} phoneEnable
 */
UpdateSystemProjectBoardForm.prototype.phoneEnable = undefined;

/**
 * 项目看板序列号
 * @member {Number} sort
 */
UpdateSystemProjectBoardForm.prototype.sort = undefined;

/**
 * 是否使用项目看板 true:使用  false:不使用
 * @member {Boolean} useEnable
 */
UpdateSystemProjectBoardForm.prototype.useEnable = undefined;


