/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The DataDictionary model module.
 * @module com.mn.sdk.model/DataDictionary
 * @version 1.0
 */
export class DataDictionary {
  /**
   * Constructs a new <code>DataDictionary</code>.
   * 数据字典
   * @alias module:com.mn.sdk.model/DataDictionary
   * @class
   * @param createdTime {Date} 创建时间
   * @param groupCode {String} 数据字典所在分组
   * @param id {String} 主键
   * @param name {String} 数据字典名称
   * @param updatedTime {Date} 修改时间
   */
  constructor(createdTime, groupCode, id, name, updatedTime) {
    this.createdTime = createdTime;
    this.groupCode = groupCode;
    this.id = id;
    this.name = name;
    this.updatedTime = updatedTime;
  }


    static constructFromList(list) {
        let array = [new DataDictionary()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(DataDictionary.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>DataDictionary</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/DataDictionary} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/DataDictionary} The populated <code>DataDictionary</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DataDictionary();
      if (Reflect.has(data, 'createdTime'))
        obj.createdTime = ApiClient.convertToType(data['createdTime'], 'Date');
      if (Reflect.has(data, 'groupCode'))
        obj.groupCode = ApiClient.convertToType(data['groupCode'], 'String');
      if (Reflect.has(data, 'id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (Reflect.has(data, 'name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (Reflect.has(data, 'updatedTime'))
        obj.updatedTime = ApiClient.convertToType(data['updatedTime'], 'Date');
    }
    return obj;
  }
}

/**
 * 创建时间
 * @member {Date} createdTime
 */
DataDictionary.prototype.createdTime = undefined;

/**
 * 数据字典所在分组
 * @member {String} groupCode
 */
DataDictionary.prototype.groupCode = undefined;

/**
 * 主键
 * @member {String} id
 */
DataDictionary.prototype.id = undefined;

/**
 * 数据字典名称
 * @member {String} name
 */
DataDictionary.prototype.name = undefined;

/**
 * 修改时间
 * @member {Date} updatedTime
 */
DataDictionary.prototype.updatedTime = undefined;


