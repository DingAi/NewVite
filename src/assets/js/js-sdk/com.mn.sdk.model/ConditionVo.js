/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The ConditionVo model module.
 * @module com.mn.sdk.model/ConditionVo
 * @version 1.0
 */
export class ConditionVo {
  /**
   * Constructs a new <code>ConditionVo</code>.
   * 条件存储vo
   * @alias module:com.mn.sdk.model/ConditionVo
   * @class
   * @param conditionName {String} 条件存储名称
   * @param deviceId {String} 条件存储绑定的设备id
   * @param id {String} 条件存储id
   * @param tagId {String} 绑定条件标签Id
   */
  constructor(conditionName, deviceId, id, tagId) {
    this.conditionName = conditionName;
    this.deviceId = deviceId;
    this.id = id;
    this.tagId = tagId;
  }


    static constructFromList(list) {
        let array = [new ConditionVo()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(ConditionVo.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>ConditionVo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/ConditionVo} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/ConditionVo} The populated <code>ConditionVo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ConditionVo();
      if (Reflect.has(data, 'conditionName'))
        obj.conditionName = ApiClient.convertToType(data['conditionName'], 'String');
      if (Reflect.has(data, 'deviceId'))
        obj.deviceId = ApiClient.convertToType(data['deviceId'], 'String');
      if (Reflect.has(data, 'id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (Reflect.has(data, 'tagId'))
        obj.tagId = ApiClient.convertToType(data['tagId'], 'String');
    }
    return obj;
  }
}

/**
 * 条件存储名称
 * @member {String} conditionName
 */
ConditionVo.prototype.conditionName = undefined;

/**
 * 条件存储绑定的设备id
 * @member {String} deviceId
 */
ConditionVo.prototype.deviceId = undefined;

/**
 * 条件存储id
 * @member {String} id
 */
ConditionVo.prototype.id = undefined;

/**
 * 绑定条件标签Id
 * @member {String} tagId
 */
ConditionVo.prototype.tagId = undefined;


