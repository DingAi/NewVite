/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';
import {DeviceMonitorVo} from './DeviceMonitorVo';
import {DevicePropertiesVo} from './DevicePropertiesVo';

/**
 * The DeviceMonitorDeviceDetailVo model module.
 * @module com.mn.sdk.model/DeviceMonitorDeviceDetailVo
 * @version 1.0
 */
export class DeviceMonitorDeviceDetailVo {
  /**
   * Constructs a new <code>DeviceMonitorDeviceDetailVo</code>.
   * Device监控后台设备详情vo
   * @alias module:com.mn.sdk.model/DeviceMonitorDeviceDetailVo
   * @class
   * @param collectorInfo {module:com.mn.sdk.model/DeviceMonitorVo} 详细信息
   * @param devicePropertiesVos {Array.<module:com.mn.sdk.model/DevicePropertiesVo>} Device信息
   * @param plcs {Array.<module:com.mn.sdk.model/DeviceMonitorVo>} plc信息
   * @param statistic {Object} 统计信息
   */
  constructor(collectorInfo, devicePropertiesVos, plcs, statistic) {
    this.collectorInfo = collectorInfo;
    this.devicePropertiesVos = devicePropertiesVos;
    this.plcs = plcs;
    this.statistic = statistic;
  }


    static constructFromList(list) {
        let array = [new DeviceMonitorDeviceDetailVo()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(DeviceMonitorDeviceDetailVo.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>DeviceMonitorDeviceDetailVo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/DeviceMonitorDeviceDetailVo} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/DeviceMonitorDeviceDetailVo} The populated <code>DeviceMonitorDeviceDetailVo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DeviceMonitorDeviceDetailVo();
      if (Reflect.has(data, 'collectorInfo'))
        obj.collectorInfo = DeviceMonitorVo.constructFromObject(data['collectorInfo']);
      if (Reflect.has(data, 'devicePropertiesVos'))
        obj.devicePropertiesVos = ApiClient.convertToType(data['devicePropertiesVos'], [DevicePropertiesVo]);
      if (Reflect.has(data, 'plcs'))
        obj.plcs = ApiClient.convertToType(data['plcs'], [DeviceMonitorVo]);
      if (Reflect.has(data, 'statistic'))
        obj.statistic = ApiClient.convertToType(data['statistic'], Object);
    }
    return obj;
  }
}

/**
 * 详细信息
 * @member {module:com.mn.sdk.model/DeviceMonitorVo} collectorInfo
 */
DeviceMonitorDeviceDetailVo.prototype.collectorInfo = undefined;

/**
 * Device信息
 * @member {Array.<module:com.mn.sdk.model/DevicePropertiesVo>} devicePropertiesVos
 */
DeviceMonitorDeviceDetailVo.prototype.devicePropertiesVos = undefined;

/**
 * plc信息
 * @member {Array.<module:com.mn.sdk.model/DeviceMonitorVo>} plcs
 */
DeviceMonitorDeviceDetailVo.prototype.plcs = undefined;

/**
 * 统计信息
 * @member {Object} statistic
 */
DeviceMonitorDeviceDetailVo.prototype.statistic = undefined;


