/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The QueryThirdVaribleListForm model module.
 * @module com.mn.sdk.model/QueryThirdVaribleListForm
 * @version 1.0
 */
export class QueryThirdVaribleListForm {
  /**
   * Constructs a new <code>QueryThirdVaribleListForm</code>.
   * 第三方设备变量分组的form
   * @alias module:com.mn.sdk.model/QueryThirdVaribleListForm
   * @class
   * @param currentPage {Number} 当前页码
   * @param groupId {String} 变量分组id
   * @param pageSize {Number} 单页大小
   * @param thirdDeviceId {String} 第三方设备ID
   */
  constructor(currentPage, groupId, pageSize, thirdDeviceId) {
    this.currentPage = currentPage;
    this.groupId = groupId;
    this.pageSize = pageSize;
    this.thirdDeviceId = thirdDeviceId;
  }


    static constructFromList(list) {
        let array = [new QueryThirdVaribleListForm()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(QueryThirdVaribleListForm.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>QueryThirdVaribleListForm</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/QueryThirdVaribleListForm} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/QueryThirdVaribleListForm} The populated <code>QueryThirdVaribleListForm</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new QueryThirdVaribleListForm();
      if (Reflect.has(data, 'currentPage'))
        obj.currentPage = ApiClient.convertToType(data['currentPage'], 'Number');
      if (Reflect.has(data, 'groupId'))
        obj.groupId = ApiClient.convertToType(data['groupId'], 'String');
      if (Reflect.has(data, 'pageSize'))
        obj.pageSize = ApiClient.convertToType(data['pageSize'], 'Number');
      if (Reflect.has(data, 'thirdDeviceId'))
        obj.thirdDeviceId = ApiClient.convertToType(data['thirdDeviceId'], 'String');
    }
    return obj;
  }
}

/**
 * 当前页码
 * @member {Number} currentPage
 */
QueryThirdVaribleListForm.prototype.currentPage = undefined;

/**
 * 变量分组id
 * @member {String} groupId
 */
QueryThirdVaribleListForm.prototype.groupId = undefined;

/**
 * 单页大小
 * @member {Number} pageSize
 */
QueryThirdVaribleListForm.prototype.pageSize = undefined;

/**
 * 第三方设备ID
 * @member {String} thirdDeviceId
 */
QueryThirdVaribleListForm.prototype.thirdDeviceId = undefined;


