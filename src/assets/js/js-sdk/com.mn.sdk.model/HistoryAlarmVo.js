/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The HistoryAlarmVo model module.
 * @module com.mn.sdk.model/HistoryAlarmVo
 * @version 1.0
 */
export class HistoryAlarmVo {
  /**
   * Constructs a new <code>HistoryAlarmVo</code>.
   * @alias module:com.mn.sdk.model/HistoryAlarmVo
   * @class
   * @param alarmDetail {String} 报警详情
   * @param alarmId {String} 报警配置id
   * @param alarmLevel {String} 报警详情0：一般，1：重要，2：紧急
   * @param alarmRemark {String} 报警备注
   * @param alarmTime {Date} 报警时间
   * @param confirmScheme {String} 确认方案
   * @param confirmTime {Date} 确认报警时间
   * @param confirmType {String} 确认类型
   * @param createdTime {Date} 创建时间
   * @param deviceId {String} 虚拟设置id
   * @param deviceName {String} 采集器名称
   * @param id {String} 报警id
   * @param projectName {String} 项目名称
   */
  constructor(alarmDetail, alarmId, alarmLevel, alarmRemark, alarmTime, confirmScheme, confirmTime, confirmType, createdTime, deviceId, deviceName, id, projectName) {
    this.alarmDetail = alarmDetail;
    this.alarmId = alarmId;
    this.alarmLevel = alarmLevel;
    this.alarmRemark = alarmRemark;
    this.alarmTime = alarmTime;
    this.confirmScheme = confirmScheme;
    this.confirmTime = confirmTime;
    this.confirmType = confirmType;
    this.createdTime = createdTime;
    this.deviceId = deviceId;
    this.deviceName = deviceName;
    this.id = id;
    this.projectName = projectName;
  }


    static constructFromList(list) {
        let array = [new HistoryAlarmVo()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(HistoryAlarmVo.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>HistoryAlarmVo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/HistoryAlarmVo} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/HistoryAlarmVo} The populated <code>HistoryAlarmVo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new HistoryAlarmVo();
      if (Reflect.has(data, 'alarmDetail'))
        obj.alarmDetail = ApiClient.convertToType(data['alarmDetail'], 'String');
      if (Reflect.has(data, 'alarmId'))
        obj.alarmId = ApiClient.convertToType(data['alarmId'], 'String');
      if (Reflect.has(data, 'alarmLevel'))
        obj.alarmLevel = ApiClient.convertToType(data['alarmLevel'], 'String');
      if (Reflect.has(data, 'alarmRemark'))
        obj.alarmRemark = ApiClient.convertToType(data['alarmRemark'], 'String');
      if (Reflect.has(data, 'alarmTime'))
        obj.alarmTime = ApiClient.convertToType(data['alarmTime'], 'Date');
      if (Reflect.has(data, 'confirmScheme'))
        obj.confirmScheme = ApiClient.convertToType(data['confirmScheme'], 'String');
      if (Reflect.has(data, 'confirmTime'))
        obj.confirmTime = ApiClient.convertToType(data['confirmTime'], 'Date');
      if (Reflect.has(data, 'confirmType'))
        obj.confirmType = ApiClient.convertToType(data['confirmType'], 'String');
      if (Reflect.has(data, 'createdTime'))
        obj.createdTime = ApiClient.convertToType(data['createdTime'], 'Date');
      if (Reflect.has(data, 'deviceId'))
        obj.deviceId = ApiClient.convertToType(data['deviceId'], 'String');
      if (Reflect.has(data, 'deviceName'))
        obj.deviceName = ApiClient.convertToType(data['deviceName'], 'String');
      if (Reflect.has(data, 'id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (Reflect.has(data, 'projectName'))
        obj.projectName = ApiClient.convertToType(data['projectName'], 'String');
    }
    return obj;
  }
}

/**
 * 报警详情
 * @member {String} alarmDetail
 */
HistoryAlarmVo.prototype.alarmDetail = undefined;

/**
 * 报警配置id
 * @member {String} alarmId
 */
HistoryAlarmVo.prototype.alarmId = undefined;

/**
 * 报警详情0：一般，1：重要，2：紧急
 * @member {String} alarmLevel
 */
HistoryAlarmVo.prototype.alarmLevel = undefined;

/**
 * 报警备注
 * @member {String} alarmRemark
 */
HistoryAlarmVo.prototype.alarmRemark = undefined;

/**
 * 报警时间
 * @member {Date} alarmTime
 */
HistoryAlarmVo.prototype.alarmTime = undefined;

/**
 * 确认方案
 * @member {String} confirmScheme
 */
HistoryAlarmVo.prototype.confirmScheme = undefined;

/**
 * 确认报警时间
 * @member {Date} confirmTime
 */
HistoryAlarmVo.prototype.confirmTime = undefined;

/**
 * 确认类型
 * @member {String} confirmType
 */
HistoryAlarmVo.prototype.confirmType = undefined;

/**
 * 创建时间
 * @member {Date} createdTime
 */
HistoryAlarmVo.prototype.createdTime = undefined;

/**
 * 虚拟设置id
 * @member {String} deviceId
 */
HistoryAlarmVo.prototype.deviceId = undefined;

/**
 * 采集器名称
 * @member {String} deviceName
 */
HistoryAlarmVo.prototype.deviceName = undefined;

/**
 * 报警id
 * @member {String} id
 */
HistoryAlarmVo.prototype.id = undefined;

/**
 * 项目名称
 * @member {String} projectName
 */
HistoryAlarmVo.prototype.projectName = undefined;


