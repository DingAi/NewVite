/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The AuthLog model module.
 * @module com.mn.sdk.model/AuthLog
 * @version 1.0
 */
export class AuthLog {
  /**
   * Constructs a new <code>AuthLog</code>.
   * @alias module:com.mn.sdk.model/AuthLog
   * @class
   * @param companyId {String} 企业id
   * @param companyName {String} 企业名称
   * @param detail {String} 详情（关联套餐和到期时间）
   * @param id {String} 唯一id
   * @param paymentAmount {Number} 缴费金额
   * @param paymentTime {String} 缴费时间
   */
  constructor(companyId, companyName, detail, id, paymentAmount, paymentTime) {
    this.companyId = companyId;
    this.companyName = companyName;
    this.detail = detail;
    this.id = id;
    this.paymentAmount = paymentAmount;
    this.paymentTime = paymentTime;
  }


    static constructFromList(list) {
        let array = [new AuthLog()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(AuthLog.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>AuthLog</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/AuthLog} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/AuthLog} The populated <code>AuthLog</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AuthLog();
      if (Reflect.has(data, 'companyId'))
        obj.companyId = ApiClient.convertToType(data['companyId'], 'String');
      if (Reflect.has(data, 'companyName'))
        obj.companyName = ApiClient.convertToType(data['companyName'], 'String');
      if (Reflect.has(data, 'detail'))
        obj.detail = ApiClient.convertToType(data['detail'], 'String');
      if (Reflect.has(data, 'id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (Reflect.has(data, 'paymentAmount'))
        obj.paymentAmount = ApiClient.convertToType(data['paymentAmount'], 'Number');
      if (Reflect.has(data, 'paymentTime'))
        obj.paymentTime = ApiClient.convertToType(data['paymentTime'], 'String');
    }
    return obj;
  }
}

/**
 * 企业id
 * @member {String} companyId
 */
AuthLog.prototype.companyId = undefined;

/**
 * 企业名称
 * @member {String} companyName
 */
AuthLog.prototype.companyName = undefined;

/**
 * 详情（关联套餐和到期时间）
 * @member {String} detail
 */
AuthLog.prototype.detail = undefined;

/**
 * 唯一id
 * @member {String} id
 */
AuthLog.prototype.id = undefined;

/**
 * 缴费金额
 * @member {Number} paymentAmount
 */
AuthLog.prototype.paymentAmount = undefined;

/**
 * 缴费时间
 * @member {String} paymentTime
 */
AuthLog.prototype.paymentTime = undefined;


