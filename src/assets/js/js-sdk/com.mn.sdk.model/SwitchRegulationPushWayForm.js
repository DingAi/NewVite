/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The SwitchRegulationPushWayForm model module.
 * @module com.mn.sdk.model/SwitchRegulationPushWayForm
 * @version 1.0
 */
export class SwitchRegulationPushWayForm {
  /**
   * Constructs a new <code>SwitchRegulationPushWayForm</code>.
   * 推送方式传参
   * @alias module:com.mn.sdk.model/SwitchRegulationPushWayForm
   * @class
   * @param messageTypeId {String} 消息类型的id
   * @param pushWay {String} 推送方式[ 0：短信推送，1：微信推送，2：邮箱推送，3：平台推送，4：报警推送]
   * @param regulationId {String} 推送id
   * @param switchType {Boolean} 切换类型，true 添加，false 删除
   */
  constructor(messageTypeId, pushWay, regulationId, switchType) {
    this.messageTypeId = messageTypeId;
    this.pushWay = pushWay;
    this.regulationId = regulationId;
    this.switchType = switchType;
  }


    static constructFromList(list) {
        let array = [new SwitchRegulationPushWayForm()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(SwitchRegulationPushWayForm.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>SwitchRegulationPushWayForm</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/SwitchRegulationPushWayForm} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/SwitchRegulationPushWayForm} The populated <code>SwitchRegulationPushWayForm</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SwitchRegulationPushWayForm();
      if (Reflect.has(data, 'messageTypeId'))
        obj.messageTypeId = ApiClient.convertToType(data['messageTypeId'], 'String');
      if (Reflect.has(data, 'pushWay'))
        obj.pushWay = ApiClient.convertToType(data['pushWay'], 'String');
      if (Reflect.has(data, 'regulationId'))
        obj.regulationId = ApiClient.convertToType(data['regulationId'], 'String');
      if (Reflect.has(data, 'switchType'))
        obj.switchType = ApiClient.convertToType(data['switchType'], 'Boolean');
    }
    return obj;
  }
}

/**
 * 消息类型的id
 * @member {String} messageTypeId
 */
SwitchRegulationPushWayForm.prototype.messageTypeId = undefined;

/**
 * 推送方式[ 0：短信推送，1：微信推送，2：邮箱推送，3：平台推送，4：报警推送]
 * @member {String} pushWay
 */
SwitchRegulationPushWayForm.prototype.pushWay = undefined;

/**
 * 推送id
 * @member {String} regulationId
 */
SwitchRegulationPushWayForm.prototype.regulationId = undefined;

/**
 * 切换类型，true 添加，false 删除
 * @member {Boolean} switchType
 */
SwitchRegulationPushWayForm.prototype.switchType = undefined;


