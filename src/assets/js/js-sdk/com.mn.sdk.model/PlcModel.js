/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';
import {VariantModel} from './VariantModel';

/**
 * The PlcModel model module.
 * @module com.mn.sdk.model/PlcModel
 * @version 1.0
 */
export class PlcModel {
  /**
   * Constructs a new <code>PlcModel</code>.
   * @alias module:com.mn.sdk.model/PlcModel
   * @class
   * @param name {String} 
   * @param plcId {Number} 
   * @param variantModels {Array.<module:com.mn.sdk.model/VariantModel>} 
   */
  constructor(name, plcId, variantModels) {
    this.name = name;
    this.plcId = plcId;
    this.variantModels = variantModels;
  }


    static constructFromList(list) {
        let array = [new PlcModel()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(PlcModel.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>PlcModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/PlcModel} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/PlcModel} The populated <code>PlcModel</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PlcModel();
      if (Reflect.has(data, 'name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (Reflect.has(data, 'plcId'))
        obj.plcId = ApiClient.convertToType(data['plcId'], 'Number');
      if (Reflect.has(data, 'variantModels'))
        obj.variantModels = ApiClient.convertToType(data['variantModels'], [VariantModel]);
    }
    return obj;
  }
}

/**
 * @member {String} name
 */
PlcModel.prototype.name = undefined;

/**
 * @member {Number} plcId
 */
PlcModel.prototype.plcId = undefined;

/**
 * @member {Array.<module:com.mn.sdk.model/VariantModel>} variantModels
 */
PlcModel.prototype.variantModels = undefined;


