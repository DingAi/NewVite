/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The QueryProjectListParam model module.
 * @module com.mn.sdk.model/QueryProjectListParam
 * @version 1.0
 */
export class QueryProjectListParam {
  /**
   * Constructs a new <code>QueryProjectListParam</code>.
   * @alias module:com.mn.sdk.model/QueryProjectListParam
   * @class
   * @param alarmStatus {String} 报警状态：0未报警，1报警
   * @param area {String} 地区搜索，格式:   省、 省:市、 省:市:区
   * @param bindSerialNumber {String} 是否都绑定序列号：0未绑定，1已绑定
   * @param clientId {String} 客户id
   * @param isAttention {String} 项目关注状态：0未关注，1关注
   * @param keyword {String} 关键字:搜索项目名称/设备序列号/客户名称 
   * @param onlineStatus {String} 项目在线状态：0离线，1在线
   * @param permissionGroupId {String} 权限组id
   * @param projectType {String} 项目类型0：自由项目，1模板项目
   * @param propertiesId {String} 属性id
   * @param propertiesValueId {String} 属性值id
   */
  constructor(alarmStatus, area, bindSerialNumber, clientId, isAttention, keyword, onlineStatus, permissionGroupId, projectType, propertiesId, propertiesValueId) {
    this.alarmStatus = alarmStatus;
    this.area = area;
    this.bindSerialNumber = bindSerialNumber;
    this.clientId = clientId;
    this.isAttention = isAttention;
    this.keyword = keyword;
    this.onlineStatus = onlineStatus;
    this.permissionGroupId = permissionGroupId;
    this.projectType = projectType;
    this.propertiesId = propertiesId;
    this.propertiesValueId = propertiesValueId;
  }


    static constructFromList(list) {
        let array = [new QueryProjectListParam()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(QueryProjectListParam.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>QueryProjectListParam</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/QueryProjectListParam} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/QueryProjectListParam} The populated <code>QueryProjectListParam</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new QueryProjectListParam();
      if (Reflect.has(data, 'alarmStatus'))
        obj.alarmStatus = ApiClient.convertToType(data['alarmStatus'], 'String');
      if (Reflect.has(data, 'area'))
        obj.area = ApiClient.convertToType(data['area'], 'String');
      if (Reflect.has(data, 'bindSerialNumber'))
        obj.bindSerialNumber = ApiClient.convertToType(data['bindSerialNumber'], 'String');
      if (Reflect.has(data, 'clientId'))
        obj.clientId = ApiClient.convertToType(data['clientId'], 'String');
      if (Reflect.has(data, 'isAttention'))
        obj.isAttention = ApiClient.convertToType(data['isAttention'], 'String');
      if (Reflect.has(data, 'keyword'))
        obj.keyword = ApiClient.convertToType(data['keyword'], 'String');
      if (Reflect.has(data, 'onlineStatus'))
        obj.onlineStatus = ApiClient.convertToType(data['onlineStatus'], 'String');
      if (Reflect.has(data, 'permissionGroupId'))
        obj.permissionGroupId = ApiClient.convertToType(data['permissionGroupId'], 'String');
      if (Reflect.has(data, 'projectType'))
        obj.projectType = ApiClient.convertToType(data['projectType'], 'String');
      if (Reflect.has(data, 'propertiesId'))
        obj.propertiesId = ApiClient.convertToType(data['propertiesId'], 'String');
      if (Reflect.has(data, 'propertiesValueId'))
        obj.propertiesValueId = ApiClient.convertToType(data['propertiesValueId'], 'String');
    }
    return obj;
  }
}

/**
 * 报警状态：0未报警，1报警
 * @member {String} alarmStatus
 */
QueryProjectListParam.prototype.alarmStatus = undefined;

/**
 * 地区搜索，格式:   省、 省:市、 省:市:区
 * @member {String} area
 */
QueryProjectListParam.prototype.area = undefined;

/**
 * 是否都绑定序列号：0未绑定，1已绑定
 * @member {String} bindSerialNumber
 */
QueryProjectListParam.prototype.bindSerialNumber = undefined;

/**
 * 客户id
 * @member {String} clientId
 */
QueryProjectListParam.prototype.clientId = undefined;

/**
 * 项目关注状态：0未关注，1关注
 * @member {String} isAttention
 */
QueryProjectListParam.prototype.isAttention = undefined;

/**
 * 关键字:搜索项目名称/设备序列号/客户名称 
 * @member {String} keyword
 */
QueryProjectListParam.prototype.keyword = undefined;

/**
 * 项目在线状态：0离线，1在线
 * @member {String} onlineStatus
 */
QueryProjectListParam.prototype.onlineStatus = undefined;

/**
 * 权限组id
 * @member {String} permissionGroupId
 */
QueryProjectListParam.prototype.permissionGroupId = undefined;

/**
 * 项目类型0：自由项目，1模板项目
 * @member {String} projectType
 */
QueryProjectListParam.prototype.projectType = undefined;

/**
 * 属性id
 * @member {String} propertiesId
 */
QueryProjectListParam.prototype.propertiesId = undefined;

/**
 * 属性值id
 * @member {String} propertiesValueId
 */
QueryProjectListParam.prototype.propertiesValueId = undefined;


