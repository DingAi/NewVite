/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The MessagePushRecord model module.
 * @module com.mn.sdk.model/MessagePushRecord
 * @version 1.0
 */
export class MessagePushRecord {
  /**
   * Constructs a new <code>MessagePushRecord</code>.
   * @alias module:com.mn.sdk.model/MessagePushRecord
   * @class
   * @param companyId {String} 企业id
   * @param content {String} 详细内容
   * @param createdTime {Date} 创建时间
   * @param failReason {String} 失败原因
   * @param id {String} 唯一id
   * @param status {String} 发送状态，0:失败,  1:成功
   * @param targets {String} 手机号/邮件/微信id
   * @param type {String} 类型，0:短信,  1:语音短信，2：邮件，3：微信
   */
  constructor(companyId, content, createdTime, failReason, id, status, targets, type) {
    this.companyId = companyId;
    this.content = content;
    this.createdTime = createdTime;
    this.failReason = failReason;
    this.id = id;
    this.status = status;
    this.targets = targets;
    this.type = type;
  }


    static constructFromList(list) {
        let array = [new MessagePushRecord()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(MessagePushRecord.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>MessagePushRecord</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/MessagePushRecord} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/MessagePushRecord} The populated <code>MessagePushRecord</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MessagePushRecord();
      if (Reflect.has(data, 'companyId'))
        obj.companyId = ApiClient.convertToType(data['companyId'], 'String');
      if (Reflect.has(data, 'content'))
        obj.content = ApiClient.convertToType(data['content'], 'String');
      if (Reflect.has(data, 'createdTime'))
        obj.createdTime = ApiClient.convertToType(data['createdTime'], 'Date');
      if (Reflect.has(data, 'failReason'))
        obj.failReason = ApiClient.convertToType(data['failReason'], 'String');
      if (Reflect.has(data, 'id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (Reflect.has(data, 'status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (Reflect.has(data, 'targets'))
        obj.targets = ApiClient.convertToType(data['targets'], 'String');
      if (Reflect.has(data, 'type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
    }
    return obj;
  }
}

/**
 * 企业id
 * @member {String} companyId
 */
MessagePushRecord.prototype.companyId = undefined;

/**
 * 详细内容
 * @member {String} content
 */
MessagePushRecord.prototype.content = undefined;

/**
 * 创建时间
 * @member {Date} createdTime
 */
MessagePushRecord.prototype.createdTime = undefined;

/**
 * 失败原因
 * @member {String} failReason
 */
MessagePushRecord.prototype.failReason = undefined;

/**
 * 唯一id
 * @member {String} id
 */
MessagePushRecord.prototype.id = undefined;

/**
 * 发送状态，0:失败,  1:成功
 * @member {String} status
 */
MessagePushRecord.prototype.status = undefined;

/**
 * 手机号/邮件/微信id
 * @member {String} targets
 */
MessagePushRecord.prototype.targets = undefined;

/**
 * 类型，0:短信,  1:语音短信，2：邮件，3：微信
 * @member {String} type
 */
MessagePushRecord.prototype.type = undefined;


