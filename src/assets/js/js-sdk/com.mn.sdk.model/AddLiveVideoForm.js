/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The AddLiveVideoForm model module.
 * @module com.mn.sdk.model/AddLiveVideoForm
 * @version 1.0
 */
export class AddLiveVideoForm {
  /**
   * Constructs a new <code>AddLiveVideoForm</code>.
   * @alias module:com.mn.sdk.model/AddLiveVideoForm
   * @class
   * @param liveAddress {String} 直播地址
   * @param name {String} 直播视屏名称
   * @param projectId {String} 项目id
   * @param remark {String} 备注
   * @param serialNumber {String} 设备序列号
   * @param videoIndex {Number} 直播视频索引坐标值范围，0,1,2,3
   */
  constructor(liveAddress, name, projectId, remark, serialNumber, videoIndex) {
    this.liveAddress = liveAddress;
    this.name = name;
    this.projectId = projectId;
    this.remark = remark;
    this.serialNumber = serialNumber;
    this.videoIndex = videoIndex;
  }


    static constructFromList(list) {
        let array = [new AddLiveVideoForm()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(AddLiveVideoForm.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>AddLiveVideoForm</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/AddLiveVideoForm} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/AddLiveVideoForm} The populated <code>AddLiveVideoForm</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AddLiveVideoForm();
      if (Reflect.has(data, 'liveAddress'))
        obj.liveAddress = ApiClient.convertToType(data['liveAddress'], 'String');
      if (Reflect.has(data, 'name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (Reflect.has(data, 'projectId'))
        obj.projectId = ApiClient.convertToType(data['projectId'], 'String');
      if (Reflect.has(data, 'remark'))
        obj.remark = ApiClient.convertToType(data['remark'], 'String');
      if (Reflect.has(data, 'serialNumber'))
        obj.serialNumber = ApiClient.convertToType(data['serialNumber'], 'String');
      if (Reflect.has(data, 'videoIndex'))
        obj.videoIndex = ApiClient.convertToType(data['videoIndex'], 'Number');
    }
    return obj;
  }
}

/**
 * 直播地址
 * @member {String} liveAddress
 */
AddLiveVideoForm.prototype.liveAddress = undefined;

/**
 * 直播视屏名称
 * @member {String} name
 */
AddLiveVideoForm.prototype.name = undefined;

/**
 * 项目id
 * @member {String} projectId
 */
AddLiveVideoForm.prototype.projectId = undefined;

/**
 * 备注
 * @member {String} remark
 */
AddLiveVideoForm.prototype.remark = undefined;

/**
 * 设备序列号
 * @member {String} serialNumber
 */
AddLiveVideoForm.prototype.serialNumber = undefined;

/**
 * 直播视频索引坐标值范围，0,1,2,3
 * @member {Number} videoIndex
 */
AddLiveVideoForm.prototype.videoIndex = undefined;


