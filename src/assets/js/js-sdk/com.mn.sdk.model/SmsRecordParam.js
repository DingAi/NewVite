/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The SmsRecordParam model module.
 * @module com.mn.sdk.model/SmsRecordParam
 * @version 1.0
 */
export class SmsRecordParam {
  /**
   * Constructs a new <code>SmsRecordParam</code>.
   * @alias module:com.mn.sdk.model/SmsRecordParam
   * @class
   * @param currentPage {Number} 页码
   * @param endTime {String} 结束时间
   * @param pageSize {Number} 查询数量
   * @param phone {String} 手机号搜索
   * @param smsStatus {String}  状态，0:失败，1:成功
   * @param smsType {String} 类型， 0:短信,   1:语音短信
   * @param startTime {String} 开始时间
   */
  constructor(currentPage, endTime, pageSize, phone, smsStatus, smsType, startTime) {
    this.currentPage = currentPage;
    this.endTime = endTime;
    this.pageSize = pageSize;
    this.phone = phone;
    this.smsStatus = smsStatus;
    this.smsType = smsType;
    this.startTime = startTime;
  }


    static constructFromList(list) {
        let array = [new SmsRecordParam()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(SmsRecordParam.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>SmsRecordParam</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/SmsRecordParam} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/SmsRecordParam} The populated <code>SmsRecordParam</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SmsRecordParam();
      if (Reflect.has(data, 'currentPage'))
        obj.currentPage = ApiClient.convertToType(data['currentPage'], 'Number');
      if (Reflect.has(data, 'endTime'))
        obj.endTime = ApiClient.convertToType(data['endTime'], 'String');
      if (Reflect.has(data, 'pageSize'))
        obj.pageSize = ApiClient.convertToType(data['pageSize'], 'Number');
      if (Reflect.has(data, 'phone'))
        obj.phone = ApiClient.convertToType(data['phone'], 'String');
      if (Reflect.has(data, 'smsStatus'))
        obj.smsStatus = ApiClient.convertToType(data['smsStatus'], 'String');
      if (Reflect.has(data, 'smsType'))
        obj.smsType = ApiClient.convertToType(data['smsType'], 'String');
      if (Reflect.has(data, 'startTime'))
        obj.startTime = ApiClient.convertToType(data['startTime'], 'String');
    }
    return obj;
  }
}

/**
 * 页码
 * @member {Number} currentPage
 */
SmsRecordParam.prototype.currentPage = undefined;

/**
 * 结束时间
 * @member {String} endTime
 */
SmsRecordParam.prototype.endTime = undefined;

/**
 * 查询数量
 * @member {Number} pageSize
 */
SmsRecordParam.prototype.pageSize = undefined;

/**
 * 手机号搜索
 * @member {String} phone
 */
SmsRecordParam.prototype.phone = undefined;

/**
 *  状态，0:失败，1:成功
 * @member {String} smsStatus
 */
SmsRecordParam.prototype.smsStatus = undefined;

/**
 * 类型， 0:短信,   1:语音短信
 * @member {String} smsType
 */
SmsRecordParam.prototype.smsType = undefined;

/**
 * 开始时间
 * @member {String} startTime
 */
SmsRecordParam.prototype.startTime = undefined;


