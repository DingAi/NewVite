/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The UpdateClientForm model module.
 * @module com.mn.sdk.model/UpdateClientForm
 * @version 1.0
 */
export class UpdateClientForm {
  /**
   * Constructs a new <code>UpdateClientForm</code>.
   * 修改个人客户
   * @alias module:com.mn.sdk.model/UpdateClientForm
   * @class
   * @param address {String} 客户企业地址
   * @param clientCompanyName {String} 客户企业名称
   * @param clientId {String} 客户企业id
   * @param clientName {String} 企业客户名称
   * @param contactEmail {String} 客户联系人邮箱
   * @param contactName {String} 客户联系人名称
   * @param contactPhone {String} 客户联系人电话
   * @param officePhone {String} 客户企业办公电话
   * @param remark {String} 客户企业备注
   * @param sex {Number} 客户联系人性别
   * @param username {String} 客户管理员账号
   */
  constructor(address, clientCompanyName, clientId, clientName, contactEmail, contactName, contactPhone, officePhone, remark, sex, username) {
    this.address = address;
    this.clientCompanyName = clientCompanyName;
    this.clientId = clientId;
    this.clientName = clientName;
    this.contactEmail = contactEmail;
    this.contactName = contactName;
    this.contactPhone = contactPhone;
    this.officePhone = officePhone;
    this.remark = remark;
    this.sex = sex;
    this.username = username;
  }


    static constructFromList(list) {
        let array = [new UpdateClientForm()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(UpdateClientForm.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>UpdateClientForm</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/UpdateClientForm} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/UpdateClientForm} The populated <code>UpdateClientForm</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new UpdateClientForm();
      if (Reflect.has(data, 'address'))
        obj.address = ApiClient.convertToType(data['address'], 'String');
      if (Reflect.has(data, 'clientCompanyName'))
        obj.clientCompanyName = ApiClient.convertToType(data['clientCompanyName'], 'String');
      if (Reflect.has(data, 'clientId'))
        obj.clientId = ApiClient.convertToType(data['clientId'], 'String');
      if (Reflect.has(data, 'clientName'))
        obj.clientName = ApiClient.convertToType(data['clientName'], 'String');
      if (Reflect.has(data, 'contactEmail'))
        obj.contactEmail = ApiClient.convertToType(data['contactEmail'], 'String');
      if (Reflect.has(data, 'contactName'))
        obj.contactName = ApiClient.convertToType(data['contactName'], 'String');
      if (Reflect.has(data, 'contactPhone'))
        obj.contactPhone = ApiClient.convertToType(data['contactPhone'], 'String');
      if (Reflect.has(data, 'officePhone'))
        obj.officePhone = ApiClient.convertToType(data['officePhone'], 'String');
      if (Reflect.has(data, 'remark'))
        obj.remark = ApiClient.convertToType(data['remark'], 'String');
      if (Reflect.has(data, 'sex'))
        obj.sex = ApiClient.convertToType(data['sex'], 'Number');
      if (Reflect.has(data, 'username'))
        obj.username = ApiClient.convertToType(data['username'], 'String');
    }
    return obj;
  }
}

/**
 * 客户企业地址
 * @member {String} address
 */
UpdateClientForm.prototype.address = undefined;

/**
 * 客户企业名称
 * @member {String} clientCompanyName
 */
UpdateClientForm.prototype.clientCompanyName = undefined;

/**
 * 客户企业id
 * @member {String} clientId
 */
UpdateClientForm.prototype.clientId = undefined;

/**
 * 企业客户名称
 * @member {String} clientName
 */
UpdateClientForm.prototype.clientName = undefined;

/**
 * 客户联系人邮箱
 * @member {String} contactEmail
 */
UpdateClientForm.prototype.contactEmail = undefined;

/**
 * 客户联系人名称
 * @member {String} contactName
 */
UpdateClientForm.prototype.contactName = undefined;

/**
 * 客户联系人电话
 * @member {String} contactPhone
 */
UpdateClientForm.prototype.contactPhone = undefined;

/**
 * 客户企业办公电话
 * @member {String} officePhone
 */
UpdateClientForm.prototype.officePhone = undefined;

/**
 * 客户企业备注
 * @member {String} remark
 */
UpdateClientForm.prototype.remark = undefined;

/**
 * 客户联系人性别
 * @member {Number} sex
 */
UpdateClientForm.prototype.sex = undefined;

/**
 * 客户管理员账号
 * @member {String} username
 */
UpdateClientForm.prototype.username = undefined;


