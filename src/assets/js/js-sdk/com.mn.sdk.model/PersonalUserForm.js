/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The PersonalUserForm model module.
 * @module com.mn.sdk.model/PersonalUserForm
 * @version 1.0
 */
export class PersonalUserForm {
  /**
   * Constructs a new <code>PersonalUserForm</code>.
   * 个人基本信息表单信息
   * @alias module:com.mn.sdk.model/PersonalUserForm
   * @class
   * @param address {String} 地址
   * @param nickname {String} 昵称
   * @param sex {Number} 性别(0:男 1:女 2:未知)
   */
  constructor(address, nickname, sex) {
    this.address = address;
    this.nickname = nickname;
    this.sex = sex;
  }


    static constructFromList(list) {
        let array = [new PersonalUserForm()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(PersonalUserForm.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>PersonalUserForm</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/PersonalUserForm} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/PersonalUserForm} The populated <code>PersonalUserForm</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PersonalUserForm();
      if (Reflect.has(data, 'address'))
        obj.address = ApiClient.convertToType(data['address'], 'String');
      if (Reflect.has(data, 'nickname'))
        obj.nickname = ApiClient.convertToType(data['nickname'], 'String');
      if (Reflect.has(data, 'sex'))
        obj.sex = ApiClient.convertToType(data['sex'], 'Number');
    }
    return obj;
  }
}

/**
 * 地址
 * @member {String} address
 */
PersonalUserForm.prototype.address = undefined;

/**
 * 昵称
 * @member {String} nickname
 */
PersonalUserForm.prototype.nickname = undefined;

/**
 * 性别(0:男 1:女 2:未知)
 * @member {Number} sex
 */
PersonalUserForm.prototype.sex = undefined;


