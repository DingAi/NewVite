/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The PermissionVo model module.
 * @module com.mn.sdk.model/PermissionVo
 * @version 1.0
 */
export class PermissionVo {
  /**
   * Constructs a new <code>PermissionVo</code>.
   * 权限VO
   * @alias module:com.mn.sdk.model/PermissionVo
   * @class
   * @param id {String} 权限组或者项目ID
   * @param name {String} 权限组或者项目名称
   * @param roleId {String} 角色Id
   * @param roleName {String} 角色名称
   * @param type {Number}  0 权限组 1项目
   * @param userId {String} 用户Id
   */
  constructor(id, name, roleId, roleName, type, userId) {
    this.id = id;
    this.name = name;
    this.roleId = roleId;
    this.roleName = roleName;
    this.type = type;
    this.userId = userId;
  }


    static constructFromList(list) {
        let array = [new PermissionVo()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(PermissionVo.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>PermissionVo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/PermissionVo} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/PermissionVo} The populated <code>PermissionVo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PermissionVo();
      if (Reflect.has(data, 'id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (Reflect.has(data, 'name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (Reflect.has(data, 'roleId'))
        obj.roleId = ApiClient.convertToType(data['roleId'], 'String');
      if (Reflect.has(data, 'roleName'))
        obj.roleName = ApiClient.convertToType(data['roleName'], 'String');
      if (Reflect.has(data, 'type'))
        obj.type = ApiClient.convertToType(data['type'], 'Number');
      if (Reflect.has(data, 'userId'))
        obj.userId = ApiClient.convertToType(data['userId'], 'String');
    }
    return obj;
  }
}

/**
 * 权限组或者项目ID
 * @member {String} id
 */
PermissionVo.prototype.id = undefined;

/**
 * 权限组或者项目名称
 * @member {String} name
 */
PermissionVo.prototype.name = undefined;

/**
 * 角色Id
 * @member {String} roleId
 */
PermissionVo.prototype.roleId = undefined;

/**
 * 角色名称
 * @member {String} roleName
 */
PermissionVo.prototype.roleName = undefined;

/**
 *  0 权限组 1项目
 * @member {Number} type
 */
PermissionVo.prototype.type = undefined;

/**
 * 用户Id
 * @member {String} userId
 */
PermissionVo.prototype.userId = undefined;


