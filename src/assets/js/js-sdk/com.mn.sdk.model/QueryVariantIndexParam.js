/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The QueryVariantIndexParam model module.
 * @module com.mn.sdk.model/QueryVariantIndexParam
 * @version 1.0
 */
export class QueryVariantIndexParam {
  /**
   * Constructs a new <code>QueryVariantIndexParam</code>.
   * 查询变量 指标参数类
   * @alias module:com.mn.sdk.model/QueryVariantIndexParam
   * @class
   * @param deviceId {String} 设备Id
   * @param resourceId {String} 模板/项目Id
   * @param resourceType {String} project/template
   * @param variantId {Number} 变量Id
   */
  constructor(deviceId, resourceId, resourceType, variantId) {
    this.deviceId = deviceId;
    this.resourceId = resourceId;
    this.resourceType = resourceType;
    this.variantId = variantId;
  }


    static constructFromList(list) {
        let array = [new QueryVariantIndexParam()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(QueryVariantIndexParam.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>QueryVariantIndexParam</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/QueryVariantIndexParam} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/QueryVariantIndexParam} The populated <code>QueryVariantIndexParam</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new QueryVariantIndexParam();
      if (Reflect.has(data, 'deviceId'))
        obj.deviceId = ApiClient.convertToType(data['deviceId'], 'String');
      if (Reflect.has(data, 'resourceId'))
        obj.resourceId = ApiClient.convertToType(data['resourceId'], 'String');
      if (Reflect.has(data, 'resourceType'))
        obj.resourceType = ApiClient.convertToType(data['resourceType'], 'String');
      if (Reflect.has(data, 'variantId'))
        obj.variantId = ApiClient.convertToType(data['variantId'], 'Number');
    }
    return obj;
  }
}

/**
 * 设备Id
 * @member {String} deviceId
 */
QueryVariantIndexParam.prototype.deviceId = undefined;

/**
 * 模板/项目Id
 * @member {String} resourceId
 */
QueryVariantIndexParam.prototype.resourceId = undefined;

/**
 * project/template
 * @member {String} resourceType
 */
QueryVariantIndexParam.prototype.resourceType = undefined;

/**
 * 变量Id
 * @member {Number} variantId
 */
QueryVariantIndexParam.prototype.variantId = undefined;


