/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The CompanyClientVo model module.
 * @module com.mn.sdk.model/CompanyClientVo
 * @version 1.0
 */
export class CompanyClientVo {
  /**
   * Constructs a new <code>CompanyClientVo</code>.
   * 客户
   * @alias module:com.mn.sdk.model/CompanyClientVo
   * @class
   * @param address {String} 地址
   * @param adminId {String} 企业超级管理员id
   * @param available {String} 可用（0：未审核，2：审核未通过，1或者空：可用）
   * @param clientCompanyName {String} 客户企业名称
   * @param clientId {String} 客户id 实际也是企业id
   * @param clientName {String} 客户名称
   * @param companyId {String} 企业id
   * @param companyType {String} 客户的企业类型
   * @param contactEmail {String} 电子邮件
   * @param contactName {String} 联系人
   * @param contactPhone {String} 联系电话
   * @param createdBy {String} 创建人
   * @param createdTime {String} 创建时间
   * @param id {String} 主键
   * @param officePhone {String} 客户联系电话
   * @param remark {String} 备注
   * @param sex {String} 客户联系人性别
   * @param updatedTime {String} 修改时间
   * @param username {String} 客户管理员账号
   */
  constructor(address, adminId, available, clientCompanyName, clientId, clientName, companyId, companyType, contactEmail, contactName, contactPhone, createdBy, createdTime, id, officePhone, remark, sex, updatedTime, username) {
    this.address = address;
    this.adminId = adminId;
    this.available = available;
    this.clientCompanyName = clientCompanyName;
    this.clientId = clientId;
    this.clientName = clientName;
    this.companyId = companyId;
    this.companyType = companyType;
    this.contactEmail = contactEmail;
    this.contactName = contactName;
    this.contactPhone = contactPhone;
    this.createdBy = createdBy;
    this.createdTime = createdTime;
    this.id = id;
    this.officePhone = officePhone;
    this.remark = remark;
    this.sex = sex;
    this.updatedTime = updatedTime;
    this.username = username;
  }


    static constructFromList(list) {
        let array = [new CompanyClientVo()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(CompanyClientVo.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>CompanyClientVo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/CompanyClientVo} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/CompanyClientVo} The populated <code>CompanyClientVo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CompanyClientVo();
      if (Reflect.has(data, 'address'))
        obj.address = ApiClient.convertToType(data['address'], 'String');
      if (Reflect.has(data, 'adminId'))
        obj.adminId = ApiClient.convertToType(data['adminId'], 'String');
      if (Reflect.has(data, 'available'))
        obj.available = ApiClient.convertToType(data['available'], 'String');
      if (Reflect.has(data, 'clientCompanyName'))
        obj.clientCompanyName = ApiClient.convertToType(data['clientCompanyName'], 'String');
      if (Reflect.has(data, 'clientId'))
        obj.clientId = ApiClient.convertToType(data['clientId'], 'String');
      if (Reflect.has(data, 'clientName'))
        obj.clientName = ApiClient.convertToType(data['clientName'], 'String');
      if (Reflect.has(data, 'companyId'))
        obj.companyId = ApiClient.convertToType(data['companyId'], 'String');
      if (Reflect.has(data, 'companyType'))
        obj.companyType = ApiClient.convertToType(data['companyType'], 'String');
      if (Reflect.has(data, 'contactEmail'))
        obj.contactEmail = ApiClient.convertToType(data['contactEmail'], 'String');
      if (Reflect.has(data, 'contactName'))
        obj.contactName = ApiClient.convertToType(data['contactName'], 'String');
      if (Reflect.has(data, 'contactPhone'))
        obj.contactPhone = ApiClient.convertToType(data['contactPhone'], 'String');
      if (Reflect.has(data, 'createdBy'))
        obj.createdBy = ApiClient.convertToType(data['createdBy'], 'String');
      if (Reflect.has(data, 'createdTime'))
        obj.createdTime = ApiClient.convertToType(data['createdTime'], 'String');
      if (Reflect.has(data, 'id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (Reflect.has(data, 'officePhone'))
        obj.officePhone = ApiClient.convertToType(data['officePhone'], 'String');
      if (Reflect.has(data, 'remark'))
        obj.remark = ApiClient.convertToType(data['remark'], 'String');
      if (Reflect.has(data, 'sex'))
        obj.sex = ApiClient.convertToType(data['sex'], 'String');
      if (Reflect.has(data, 'updatedTime'))
        obj.updatedTime = ApiClient.convertToType(data['updatedTime'], 'String');
      if (Reflect.has(data, 'username'))
        obj.username = ApiClient.convertToType(data['username'], 'String');
    }
    return obj;
  }
}

/**
 * 地址
 * @member {String} address
 */
CompanyClientVo.prototype.address = undefined;

/**
 * 企业超级管理员id
 * @member {String} adminId
 */
CompanyClientVo.prototype.adminId = undefined;

/**
 * 可用（0：未审核，2：审核未通过，1或者空：可用）
 * @member {String} available
 */
CompanyClientVo.prototype.available = undefined;

/**
 * 客户企业名称
 * @member {String} clientCompanyName
 */
CompanyClientVo.prototype.clientCompanyName = undefined;

/**
 * 客户id 实际也是企业id
 * @member {String} clientId
 */
CompanyClientVo.prototype.clientId = undefined;

/**
 * 客户名称
 * @member {String} clientName
 */
CompanyClientVo.prototype.clientName = undefined;

/**
 * 企业id
 * @member {String} companyId
 */
CompanyClientVo.prototype.companyId = undefined;

/**
 * 客户的企业类型
 * @member {String} companyType
 */
CompanyClientVo.prototype.companyType = undefined;

/**
 * 电子邮件
 * @member {String} contactEmail
 */
CompanyClientVo.prototype.contactEmail = undefined;

/**
 * 联系人
 * @member {String} contactName
 */
CompanyClientVo.prototype.contactName = undefined;

/**
 * 联系电话
 * @member {String} contactPhone
 */
CompanyClientVo.prototype.contactPhone = undefined;

/**
 * 创建人
 * @member {String} createdBy
 */
CompanyClientVo.prototype.createdBy = undefined;

/**
 * 创建时间
 * @member {String} createdTime
 */
CompanyClientVo.prototype.createdTime = undefined;

/**
 * 主键
 * @member {String} id
 */
CompanyClientVo.prototype.id = undefined;

/**
 * 客户联系电话
 * @member {String} officePhone
 */
CompanyClientVo.prototype.officePhone = undefined;

/**
 * 备注
 * @member {String} remark
 */
CompanyClientVo.prototype.remark = undefined;

/**
 * 客户联系人性别
 * @member {String} sex
 */
CompanyClientVo.prototype.sex = undefined;

/**
 * 修改时间
 * @member {String} updatedTime
 */
CompanyClientVo.prototype.updatedTime = undefined;

/**
 * 客户管理员账号
 * @member {String} username
 */
CompanyClientVo.prototype.username = undefined;


