/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The Company model module.
 * @module com.mn.sdk.model/Company
 * @version 1.0
 */
export class Company {
  /**
   * Constructs a new <code>Company</code>.
   * 企业信息
   * @alias module:com.mn.sdk.model/Company
   * @class
   * @param alias {String} 别名
   * @param areaCode {String} 区域code
   * @param available {String} 是否可用
   * @param city {String} 城市
   * @param companyAdmin {String} 企业超级管理员
   * @param companyType {String} 企业类型0：超级企业，1：普通企业，2：个人企业
   * @param country {String} 国家
   * @param createdBy {String} 创建人
   * @param createdTime {Date} 创建时间
   * @param district {String} 区/县
   * @param id {String} 企业id
   * @param industry {String} 行业
   * @param locked {String} 是否锁定(0:未锁定 1:锁定
   * @param name {String} 企业名称
   * @param province {String} 省
   * @param remark {String} 备注
   * @param scale {String} 规模
   * @param street {String} 街道
   * @param updatedTime {Date} 最后修改时间
   * @param website {String} 网址
   * @param years {String} 年限
   */
  constructor(alias, areaCode, available, city, companyAdmin, companyType, country, createdBy, createdTime, district, id, industry, locked, name, province, remark, scale, street, updatedTime, website, years) {
    this.alias = alias;
    this.areaCode = areaCode;
    this.available = available;
    this.city = city;
    this.companyAdmin = companyAdmin;
    this.companyType = companyType;
    this.country = country;
    this.createdBy = createdBy;
    this.createdTime = createdTime;
    this.district = district;
    this.id = id;
    this.industry = industry;
    this.locked = locked;
    this.name = name;
    this.province = province;
    this.remark = remark;
    this.scale = scale;
    this.street = street;
    this.updatedTime = updatedTime;
    this.website = website;
    this.years = years;
  }


    static constructFromList(list) {
        let array = [new Company()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(Company.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>Company</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/Company} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/Company} The populated <code>Company</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Company();
      if (Reflect.has(data, 'alias'))
        obj.alias = ApiClient.convertToType(data['alias'], 'String');
      if (Reflect.has(data, 'areaCode'))
        obj.areaCode = ApiClient.convertToType(data['areaCode'], 'String');
      if (Reflect.has(data, 'available'))
        obj.available = ApiClient.convertToType(data['available'], 'String');
      if (Reflect.has(data, 'city'))
        obj.city = ApiClient.convertToType(data['city'], 'String');
      if (Reflect.has(data, 'companyAdmin'))
        obj.companyAdmin = ApiClient.convertToType(data['companyAdmin'], 'String');
      if (Reflect.has(data, 'companyType'))
        obj.companyType = ApiClient.convertToType(data['companyType'], 'String');
      if (Reflect.has(data, 'country'))
        obj.country = ApiClient.convertToType(data['country'], 'String');
      if (Reflect.has(data, 'createdBy'))
        obj.createdBy = ApiClient.convertToType(data['createdBy'], 'String');
      if (Reflect.has(data, 'createdTime'))
        obj.createdTime = ApiClient.convertToType(data['createdTime'], 'Date');
      if (Reflect.has(data, 'district'))
        obj.district = ApiClient.convertToType(data['district'], 'String');
      if (Reflect.has(data, 'id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (Reflect.has(data, 'industry'))
        obj.industry = ApiClient.convertToType(data['industry'], 'String');
      if (Reflect.has(data, 'locked'))
        obj.locked = ApiClient.convertToType(data['locked'], 'String');
      if (Reflect.has(data, 'name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (Reflect.has(data, 'province'))
        obj.province = ApiClient.convertToType(data['province'], 'String');
      if (Reflect.has(data, 'remark'))
        obj.remark = ApiClient.convertToType(data['remark'], 'String');
      if (Reflect.has(data, 'scale'))
        obj.scale = ApiClient.convertToType(data['scale'], 'String');
      if (Reflect.has(data, 'street'))
        obj.street = ApiClient.convertToType(data['street'], 'String');
      if (Reflect.has(data, 'updatedTime'))
        obj.updatedTime = ApiClient.convertToType(data['updatedTime'], 'Date');
      if (Reflect.has(data, 'website'))
        obj.website = ApiClient.convertToType(data['website'], 'String');
      if (Reflect.has(data, 'years'))
        obj.years = ApiClient.convertToType(data['years'], 'String');
    }
    return obj;
  }
}

/**
 * 别名
 * @member {String} alias
 */
Company.prototype.alias = undefined;

/**
 * 区域code
 * @member {String} areaCode
 */
Company.prototype.areaCode = undefined;

/**
 * 是否可用
 * @member {String} available
 */
Company.prototype.available = undefined;

/**
 * 城市
 * @member {String} city
 */
Company.prototype.city = undefined;

/**
 * 企业超级管理员
 * @member {String} companyAdmin
 */
Company.prototype.companyAdmin = undefined;

/**
 * 企业类型0：超级企业，1：普通企业，2：个人企业
 * @member {String} companyType
 */
Company.prototype.companyType = undefined;

/**
 * 国家
 * @member {String} country
 */
Company.prototype.country = undefined;

/**
 * 创建人
 * @member {String} createdBy
 */
Company.prototype.createdBy = undefined;

/**
 * 创建时间
 * @member {Date} createdTime
 */
Company.prototype.createdTime = undefined;

/**
 * 区/县
 * @member {String} district
 */
Company.prototype.district = undefined;

/**
 * 企业id
 * @member {String} id
 */
Company.prototype.id = undefined;

/**
 * 行业
 * @member {String} industry
 */
Company.prototype.industry = undefined;

/**
 * 是否锁定(0:未锁定 1:锁定
 * @member {String} locked
 */
Company.prototype.locked = undefined;

/**
 * 企业名称
 * @member {String} name
 */
Company.prototype.name = undefined;

/**
 * 省
 * @member {String} province
 */
Company.prototype.province = undefined;

/**
 * 备注
 * @member {String} remark
 */
Company.prototype.remark = undefined;

/**
 * 规模
 * @member {String} scale
 */
Company.prototype.scale = undefined;

/**
 * 街道
 * @member {String} street
 */
Company.prototype.street = undefined;

/**
 * 最后修改时间
 * @member {Date} updatedTime
 */
Company.prototype.updatedTime = undefined;

/**
 * 网址
 * @member {String} website
 */
Company.prototype.website = undefined;

/**
 * 年限
 * @member {String} years
 */
Company.prototype.years = undefined;


