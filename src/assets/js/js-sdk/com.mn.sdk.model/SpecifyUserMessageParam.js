/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The SpecifyUserMessageParam model module.
 * @module com.mn.sdk.model/SpecifyUserMessageParam
 * @version 1.0
 */
export class SpecifyUserMessageParam {
  /**
   * Constructs a new <code>SpecifyUserMessageParam</code>.
   * @alias module:com.mn.sdk.model/SpecifyUserMessageParam
   * @class
   * @param messageGroup {Number} 消息组
   * @param messageTypeId {String} 消息类型id
   * @param params {Object.<String, String>} 消息详细参数
   * @param projectId {String} 项目id(可选)
   * @param triggered {Boolean} 报警状态
   * @param userIds {Array.<String>} 用户id
   */
  constructor(messageGroup, messageTypeId, params, projectId, triggered, userIds) {
    this.messageGroup = messageGroup;
    this.messageTypeId = messageTypeId;
    this.params = params;
    this.projectId = projectId;
    this.triggered = triggered;
    this.userIds = userIds;
  }


    static constructFromList(list) {
        let array = [new SpecifyUserMessageParam()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(SpecifyUserMessageParam.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>SpecifyUserMessageParam</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/SpecifyUserMessageParam} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/SpecifyUserMessageParam} The populated <code>SpecifyUserMessageParam</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SpecifyUserMessageParam();
      if (Reflect.has(data, 'messageGroup'))
        obj.messageGroup = ApiClient.convertToType(data['messageGroup'], 'Number');
      if (Reflect.has(data, 'messageTypeId'))
        obj.messageTypeId = ApiClient.convertToType(data['messageTypeId'], 'String');
      if (Reflect.has(data, 'params'))
        obj.params = ApiClient.convertToType(data['params'], {'String': 'String'});
      if (Reflect.has(data, 'projectId'))
        obj.projectId = ApiClient.convertToType(data['projectId'], 'String');
      if (Reflect.has(data, 'triggered'))
        obj.triggered = ApiClient.convertToType(data['triggered'], 'Boolean');
      if (Reflect.has(data, 'userIds'))
        obj.userIds = ApiClient.convertToType(data['userIds'], ['String']);
    }
    return obj;
  }
}

/**
 * 消息组
 * @member {Number} messageGroup
 */
SpecifyUserMessageParam.prototype.messageGroup = undefined;

/**
 * 消息类型id
 * @member {String} messageTypeId
 */
SpecifyUserMessageParam.prototype.messageTypeId = undefined;

/**
 * 消息详细参数
 * @member {Object.<String, String>} params
 */
SpecifyUserMessageParam.prototype.params = undefined;

/**
 * 项目id(可选)
 * @member {String} projectId
 */
SpecifyUserMessageParam.prototype.projectId = undefined;

/**
 * 报警状态
 * @member {Boolean} triggered
 */
SpecifyUserMessageParam.prototype.triggered = undefined;

/**
 * 用户id
 * @member {Array.<String>} userIds
 */
SpecifyUserMessageParam.prototype.userIds = undefined;


