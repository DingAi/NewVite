/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The SwitchPushWayForm model module.
 * @module com.mn.sdk.model/SwitchPushWayForm
 * @version 1.0
 */
export class SwitchPushWayForm {
  /**
   * Constructs a new <code>SwitchPushWayForm</code>.
   * 推送方式
   * @alias module:com.mn.sdk.model/SwitchPushWayForm
   * @class
   * @param messageTypeId {String} 消息类型id
   * @param pushway {String} 推送方式
   * @param switchType {Boolean} 切换的值  true or false
   */
  constructor(messageTypeId, pushway, switchType) {
    this.messageTypeId = messageTypeId;
    this.pushway = pushway;
    this.switchType = switchType;
  }


    static constructFromList(list) {
        let array = [new SwitchPushWayForm()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(SwitchPushWayForm.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>SwitchPushWayForm</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/SwitchPushWayForm} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/SwitchPushWayForm} The populated <code>SwitchPushWayForm</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SwitchPushWayForm();
      if (Reflect.has(data, 'messageTypeId'))
        obj.messageTypeId = ApiClient.convertToType(data['messageTypeId'], 'String');
      if (Reflect.has(data, 'pushway'))
        obj.pushway = ApiClient.convertToType(data['pushway'], 'String');
      if (Reflect.has(data, 'switchType'))
        obj.switchType = ApiClient.convertToType(data['switchType'], 'Boolean');
    }
    return obj;
  }
}

/**
 * 消息类型id
 * @member {String} messageTypeId
 */
SwitchPushWayForm.prototype.messageTypeId = undefined;

/**
 * 推送方式
 * @member {String} pushway
 */
SwitchPushWayForm.prototype.pushway = undefined;

/**
 * 切换的值  true or false
 * @member {Boolean} switchType
 */
SwitchPushWayForm.prototype.switchType = undefined;


