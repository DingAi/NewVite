/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The SmsPackage model module.
 * @module com.mn.sdk.model/SmsPackage
 * @version 1.0
 */
export class SmsPackage {
  /**
   * Constructs a new <code>SmsPackage</code>.
   * @alias module:com.mn.sdk.model/SmsPackage
   * @class
   * @param comboType {Number} 套餐类别
   * @param count {Number} 套餐额度
   * @param id {String} 套餐ID
   * @param name {String} 套餐名称
   * @param price {Number} 套餐价格
   * @param type {String} 类型,1短信,2天气,3定位,4邮件,5流量,6语音7Device短信
   */
  constructor(comboType, count, id, name, price, type) {
    this.comboType = comboType;
    this.count = count;
    this.id = id;
    this.name = name;
    this.price = price;
    this.type = type;
  }


    static constructFromList(list) {
        let array = [new SmsPackage()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(SmsPackage.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>SmsPackage</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/SmsPackage} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/SmsPackage} The populated <code>SmsPackage</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SmsPackage();
      if (Reflect.has(data, 'comboType'))
        obj.comboType = ApiClient.convertToType(data['comboType'], 'Number');
      if (Reflect.has(data, 'count'))
        obj.count = ApiClient.convertToType(data['count'], 'Number');
      if (Reflect.has(data, 'id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (Reflect.has(data, 'name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (Reflect.has(data, 'price'))
        obj.price = ApiClient.convertToType(data['price'], 'Number');
      if (Reflect.has(data, 'type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
    }
    return obj;
  }
}

/**
 * 套餐类别
 * @member {Number} comboType
 */
SmsPackage.prototype.comboType = undefined;

/**
 * 套餐额度
 * @member {Number} count
 */
SmsPackage.prototype.count = undefined;

/**
 * 套餐ID
 * @member {String} id
 */
SmsPackage.prototype.id = undefined;

/**
 * 套餐名称
 * @member {String} name
 */
SmsPackage.prototype.name = undefined;

/**
 * 套餐价格
 * @member {Number} price
 */
SmsPackage.prototype.price = undefined;

/**
 * 类型,1短信,2天气,3定位,4邮件,5流量,6语音7Device短信
 * @member {String} type
 */
SmsPackage.prototype.type = undefined;


