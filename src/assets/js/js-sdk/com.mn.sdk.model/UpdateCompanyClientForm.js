/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The UpdateCompanyClientForm model module.
 * @module com.mn.sdk.model/UpdateCompanyClientForm
 * @version 1.0
 */
export class UpdateCompanyClientForm {
  /**
   * Constructs a new <code>UpdateCompanyClientForm</code>.
   * 修改企业客户
   * @alias module:com.mn.sdk.model/UpdateCompanyClientForm
   * @class
   * @param clientId {String} 企业客户的企业Id
   * @param clientName {String} 企业客户名称
   * @param contactEmail {String} 企业客户联系邮箱
   * @param contactName {String} 企业客户联系人名称
   * @param contactPhone {String} 企业客户联系电话
   * @param remark {String} 企业客户备注
   */
  constructor(clientId, clientName, contactEmail, contactName, contactPhone, remark) {
    this.clientId = clientId;
    this.clientName = clientName;
    this.contactEmail = contactEmail;
    this.contactName = contactName;
    this.contactPhone = contactPhone;
    this.remark = remark;
  }


    static constructFromList(list) {
        let array = [new UpdateCompanyClientForm()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(UpdateCompanyClientForm.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>UpdateCompanyClientForm</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/UpdateCompanyClientForm} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/UpdateCompanyClientForm} The populated <code>UpdateCompanyClientForm</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new UpdateCompanyClientForm();
      if (Reflect.has(data, 'clientId'))
        obj.clientId = ApiClient.convertToType(data['clientId'], 'String');
      if (Reflect.has(data, 'clientName'))
        obj.clientName = ApiClient.convertToType(data['clientName'], 'String');
      if (Reflect.has(data, 'contactEmail'))
        obj.contactEmail = ApiClient.convertToType(data['contactEmail'], 'String');
      if (Reflect.has(data, 'contactName'))
        obj.contactName = ApiClient.convertToType(data['contactName'], 'String');
      if (Reflect.has(data, 'contactPhone'))
        obj.contactPhone = ApiClient.convertToType(data['contactPhone'], 'String');
      if (Reflect.has(data, 'remark'))
        obj.remark = ApiClient.convertToType(data['remark'], 'String');
    }
    return obj;
  }
}

/**
 * 企业客户的企业Id
 * @member {String} clientId
 */
UpdateCompanyClientForm.prototype.clientId = undefined;

/**
 * 企业客户名称
 * @member {String} clientName
 */
UpdateCompanyClientForm.prototype.clientName = undefined;

/**
 * 企业客户联系邮箱
 * @member {String} contactEmail
 */
UpdateCompanyClientForm.prototype.contactEmail = undefined;

/**
 * 企业客户联系人名称
 * @member {String} contactName
 */
UpdateCompanyClientForm.prototype.contactName = undefined;

/**
 * 企业客户联系电话
 * @member {String} contactPhone
 */
UpdateCompanyClientForm.prototype.contactPhone = undefined;

/**
 * 企业客户备注
 * @member {String} remark
 */
UpdateCompanyClientForm.prototype.remark = undefined;


