/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The WriteVariantValue model module.
 * @module com.mn.sdk.model/WriteVariantValue
 * @version 1.0
 */
export class WriteVariantValue {
  /**
   * Constructs a new <code>WriteVariantValue</code>.
   * @alias module:com.mn.sdk.model/WriteVariantValue
   * @class
   * @param deviceId {String} 设备ID
   * @param value {String} 变量值
   * @param variantId {Number} 变量ID
   */
  constructor(deviceId, value, variantId) {
    this.deviceId = deviceId;
    this.value = value;
    this.variantId = variantId;
  }


    static constructFromList(list) {
        let array = [new WriteVariantValue()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(WriteVariantValue.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>WriteVariantValue</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/WriteVariantValue} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/WriteVariantValue} The populated <code>WriteVariantValue</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new WriteVariantValue();
      if (Reflect.has(data, 'deviceId'))
        obj.deviceId = ApiClient.convertToType(data['deviceId'], 'String');
      if (Reflect.has(data, 'value'))
        obj.value = ApiClient.convertToType(data['value'], 'String');
      if (Reflect.has(data, 'variantId'))
        obj.variantId = ApiClient.convertToType(data['variantId'], 'Number');
    }
    return obj;
  }
}

/**
 * 设备ID
 * @member {String} deviceId
 */
WriteVariantValue.prototype.deviceId = undefined;

/**
 * 变量值
 * @member {String} value
 */
WriteVariantValue.prototype.value = undefined;

/**
 * 变量ID
 * @member {Number} variantId
 */
WriteVariantValue.prototype.variantId = undefined;


