/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The SuperCompanyVo model module.
 * @module com.mn.sdk.model/SuperCompanyVo
 * @version 1.0
 */
export class SuperCompanyVo {
  /**
   * Constructs a new <code>SuperCompanyVo</code>.
   * super企业Vo
   * @alias module:com.mn.sdk.model/SuperCompanyVo
   * @class
   * @param alias {String} 别名(简称)
   * @param companyId {String} 企业id
   * @param companyName {String} 企业名称
   * @param createdTime {Date} 创建时间
   * @param deviceCount {Number} 设备数量
   * @param industry {String} 行业
   * @param location {String} 地理位置
   * @param nickname {String} 管理员昵称
   * @param projectCount {Number} 项目数量
   * @param userCount {Number} 用户数量
   * @param username {String} 管理员账号
   */
  constructor(alias, companyId, companyName, createdTime, deviceCount, industry, location, nickname, projectCount, userCount, username) {
    this.alias = alias;
    this.companyId = companyId;
    this.companyName = companyName;
    this.createdTime = createdTime;
    this.deviceCount = deviceCount;
    this.industry = industry;
    this.location = location;
    this.nickname = nickname;
    this.projectCount = projectCount;
    this.userCount = userCount;
    this.username = username;
  }


    static constructFromList(list) {
        let array = [new SuperCompanyVo()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(SuperCompanyVo.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>SuperCompanyVo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/SuperCompanyVo} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/SuperCompanyVo} The populated <code>SuperCompanyVo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SuperCompanyVo();
      if (Reflect.has(data, 'alias'))
        obj.alias = ApiClient.convertToType(data['alias'], 'String');
      if (Reflect.has(data, 'companyId'))
        obj.companyId = ApiClient.convertToType(data['companyId'], 'String');
      if (Reflect.has(data, 'companyName'))
        obj.companyName = ApiClient.convertToType(data['companyName'], 'String');
      if (Reflect.has(data, 'createdTime'))
        obj.createdTime = ApiClient.convertToType(data['createdTime'], 'Date');
      if (Reflect.has(data, 'deviceCount'))
        obj.deviceCount = ApiClient.convertToType(data['deviceCount'], 'Number');
      if (Reflect.has(data, 'industry'))
        obj.industry = ApiClient.convertToType(data['industry'], 'String');
      if (Reflect.has(data, 'location'))
        obj.location = ApiClient.convertToType(data['location'], 'String');
      if (Reflect.has(data, 'nickname'))
        obj.nickname = ApiClient.convertToType(data['nickname'], 'String');
      if (Reflect.has(data, 'projectCount'))
        obj.projectCount = ApiClient.convertToType(data['projectCount'], 'Number');
      if (Reflect.has(data, 'userCount'))
        obj.userCount = ApiClient.convertToType(data['userCount'], 'Number');
      if (Reflect.has(data, 'username'))
        obj.username = ApiClient.convertToType(data['username'], 'String');
    }
    return obj;
  }
}

/**
 * 别名(简称)
 * @member {String} alias
 */
SuperCompanyVo.prototype.alias = undefined;

/**
 * 企业id
 * @member {String} companyId
 */
SuperCompanyVo.prototype.companyId = undefined;

/**
 * 企业名称
 * @member {String} companyName
 */
SuperCompanyVo.prototype.companyName = undefined;

/**
 * 创建时间
 * @member {Date} createdTime
 */
SuperCompanyVo.prototype.createdTime = undefined;

/**
 * 设备数量
 * @member {Number} deviceCount
 */
SuperCompanyVo.prototype.deviceCount = undefined;

/**
 * 行业
 * @member {String} industry
 */
SuperCompanyVo.prototype.industry = undefined;

/**
 * 地理位置
 * @member {String} location
 */
SuperCompanyVo.prototype.location = undefined;

/**
 * 管理员昵称
 * @member {String} nickname
 */
SuperCompanyVo.prototype.nickname = undefined;

/**
 * 项目数量
 * @member {Number} projectCount
 */
SuperCompanyVo.prototype.projectCount = undefined;

/**
 * 用户数量
 * @member {Number} userCount
 */
SuperCompanyVo.prototype.userCount = undefined;

/**
 * 管理员账号
 * @member {String} username
 */
SuperCompanyVo.prototype.username = undefined;


