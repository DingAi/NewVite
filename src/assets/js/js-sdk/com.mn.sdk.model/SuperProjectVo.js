/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The SuperProjectVo model module.
 * @module com.mn.sdk.model/SuperProjectVo
 * @version 1.0
 */
export class SuperProjectVo {
  /**
   * Constructs a new <code>SuperProjectVo</code>.
   * super后台项目vo
   * @alias module:com.mn.sdk.model/SuperProjectVo
   * @class
   * @param companyName {String} 企业名称
   * @param createdTime {String} 创建时间
   * @param deviceCount {Number} device数量
   * @param location {String} 地理位置
   * @param projectId {String} 项目id
   * @param projectName {String} 项目名称
   * @param variantCount {Number} 变量数量
   */
  constructor(companyName, createdTime, deviceCount, location, projectId, projectName, variantCount) {
    this.companyName = companyName;
    this.createdTime = createdTime;
    this.deviceCount = deviceCount;
    this.location = location;
    this.projectId = projectId;
    this.projectName = projectName;
    this.variantCount = variantCount;
  }


    static constructFromList(list) {
        let array = [new SuperProjectVo()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(SuperProjectVo.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>SuperProjectVo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/SuperProjectVo} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/SuperProjectVo} The populated <code>SuperProjectVo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SuperProjectVo();
      if (Reflect.has(data, 'companyName'))
        obj.companyName = ApiClient.convertToType(data['companyName'], 'String');
      if (Reflect.has(data, 'createdTime'))
        obj.createdTime = ApiClient.convertToType(data['createdTime'], 'String');
      if (Reflect.has(data, 'deviceCount'))
        obj.deviceCount = ApiClient.convertToType(data['deviceCount'], 'Number');
      if (Reflect.has(data, 'location'))
        obj.location = ApiClient.convertToType(data['location'], 'String');
      if (Reflect.has(data, 'projectId'))
        obj.projectId = ApiClient.convertToType(data['projectId'], 'String');
      if (Reflect.has(data, 'projectName'))
        obj.projectName = ApiClient.convertToType(data['projectName'], 'String');
      if (Reflect.has(data, 'variantCount'))
        obj.variantCount = ApiClient.convertToType(data['variantCount'], 'Number');
    }
    return obj;
  }
}

/**
 * 企业名称
 * @member {String} companyName
 */
SuperProjectVo.prototype.companyName = undefined;

/**
 * 创建时间
 * @member {String} createdTime
 */
SuperProjectVo.prototype.createdTime = undefined;

/**
 * device数量
 * @member {Number} deviceCount
 */
SuperProjectVo.prototype.deviceCount = undefined;

/**
 * 地理位置
 * @member {String} location
 */
SuperProjectVo.prototype.location = undefined;

/**
 * 项目id
 * @member {String} projectId
 */
SuperProjectVo.prototype.projectId = undefined;

/**
 * 项目名称
 * @member {String} projectName
 */
SuperProjectVo.prototype.projectName = undefined;

/**
 * 变量数量
 * @member {Number} variantCount
 */
SuperProjectVo.prototype.variantCount = undefined;


