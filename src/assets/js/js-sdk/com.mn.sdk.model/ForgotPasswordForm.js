/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The ForgotPasswordForm model module.
 * @module com.mn.sdk.model/ForgotPasswordForm
 * @version 1.0
 */
export class ForgotPasswordForm {
  /**
   * Constructs a new <code>ForgotPasswordForm</code>.
   * @alias module:com.mn.sdk.model/ForgotPasswordForm
   * @class
   * @param account {String} 
   * @param code {String} 
   * @param confirmNewPassword {String} 
   * @param deviceId {String} 
   * @param newPassword {String} 
   * @param randomOne {String} 
   * @param randomTwo {String} 
   * @param time {String} 
   */
  constructor(account, code, confirmNewPassword, deviceId, newPassword, randomOne, randomTwo, time) {
    this.account = account;
    this.code = code;
    this.confirmNewPassword = confirmNewPassword;
    this.deviceId = deviceId;
    this.newPassword = newPassword;
    this.randomOne = randomOne;
    this.randomTwo = randomTwo;
    this.time = time;
  }


    static constructFromList(list) {
        let array = [new ForgotPasswordForm()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(ForgotPasswordForm.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>ForgotPasswordForm</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/ForgotPasswordForm} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/ForgotPasswordForm} The populated <code>ForgotPasswordForm</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ForgotPasswordForm();
      if (Reflect.has(data, 'account'))
        obj.account = ApiClient.convertToType(data['account'], 'String');
      if (Reflect.has(data, 'code'))
        obj.code = ApiClient.convertToType(data['code'], 'String');
      if (Reflect.has(data, 'confirmNewPassword'))
        obj.confirmNewPassword = ApiClient.convertToType(data['confirmNewPassword'], 'String');
      if (Reflect.has(data, 'deviceId'))
        obj.deviceId = ApiClient.convertToType(data['deviceId'], 'String');
      if (Reflect.has(data, 'newPassword'))
        obj.newPassword = ApiClient.convertToType(data['newPassword'], 'String');
      if (Reflect.has(data, 'randomOne'))
        obj.randomOne = ApiClient.convertToType(data['randomOne'], 'String');
      if (Reflect.has(data, 'randomTwo'))
        obj.randomTwo = ApiClient.convertToType(data['randomTwo'], 'String');
      if (Reflect.has(data, 'time'))
        obj.time = ApiClient.convertToType(data['time'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} account
 */
ForgotPasswordForm.prototype.account = undefined;

/**
 * @member {String} code
 */
ForgotPasswordForm.prototype.code = undefined;

/**
 * @member {String} confirmNewPassword
 */
ForgotPasswordForm.prototype.confirmNewPassword = undefined;

/**
 * @member {String} deviceId
 */
ForgotPasswordForm.prototype.deviceId = undefined;

/**
 * @member {String} newPassword
 */
ForgotPasswordForm.prototype.newPassword = undefined;

/**
 * @member {String} randomOne
 */
ForgotPasswordForm.prototype.randomOne = undefined;

/**
 * @member {String} randomTwo
 */
ForgotPasswordForm.prototype.randomTwo = undefined;

/**
 * @member {String} time
 */
ForgotPasswordForm.prototype.time = undefined;


