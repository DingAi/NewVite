/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The ClientProjectInfoVo model module.
 * @module com.mn.sdk.model/ClientProjectInfoVo
 * @version 1.0
 */
export class ClientProjectInfoVo {
  /**
   * Constructs a new <code>ClientProjectInfoVo</code>.
   * 授权项目
   * @alias module:com.mn.sdk.model/ClientProjectInfoVo
   * @class
   * @param clientId {String} 客户的企业id
   * @param companyId {String} 本企业id
   * @param projectId {String} 项目id
   * @param projectName {String} 项目名称
   * @param projectRelId {String} 项目角色关联关系的id
   * @param projectRoleId {String} 项目授权的角色id
   * @param roleName {String} 角色名称
   */
  constructor(clientId, companyId, projectId, projectName, projectRelId, projectRoleId, roleName) {
    this.clientId = clientId;
    this.companyId = companyId;
    this.projectId = projectId;
    this.projectName = projectName;
    this.projectRelId = projectRelId;
    this.projectRoleId = projectRoleId;
    this.roleName = roleName;
  }


    static constructFromList(list) {
        let array = [new ClientProjectInfoVo()];
        array.splice(0, array.length);

        if (!(list instanceof Array)) {
            return array;
        }

        for (const obj of list) {
            array.push(ClientProjectInfoVo.constructFromObject(obj));
        }

        return array;
    }


  /**
   * Constructs a <code>ClientProjectInfoVo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.mn.sdk.model/ClientProjectInfoVo} obj Optional instance to populate.
   * @return {module:com.mn.sdk.model/ClientProjectInfoVo} The populated <code>ClientProjectInfoVo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ClientProjectInfoVo();
      if (Reflect.has(data, 'clientId'))
        obj.clientId = ApiClient.convertToType(data['clientId'], 'String');
      if (Reflect.has(data, 'companyId'))
        obj.companyId = ApiClient.convertToType(data['companyId'], 'String');
      if (Reflect.has(data, 'projectId'))
        obj.projectId = ApiClient.convertToType(data['projectId'], 'String');
      if (Reflect.has(data, 'projectName'))
        obj.projectName = ApiClient.convertToType(data['projectName'], 'String');
      if (Reflect.has(data, 'projectRelId'))
        obj.projectRelId = ApiClient.convertToType(data['projectRelId'], 'String');
      if (Reflect.has(data, 'projectRoleId'))
        obj.projectRoleId = ApiClient.convertToType(data['projectRoleId'], 'String');
      if (Reflect.has(data, 'roleName'))
        obj.roleName = ApiClient.convertToType(data['roleName'], 'String');
    }
    return obj;
  }
}

/**
 * 客户的企业id
 * @member {String} clientId
 */
ClientProjectInfoVo.prototype.clientId = undefined;

/**
 * 本企业id
 * @member {String} companyId
 */
ClientProjectInfoVo.prototype.companyId = undefined;

/**
 * 项目id
 * @member {String} projectId
 */
ClientProjectInfoVo.prototype.projectId = undefined;

/**
 * 项目名称
 * @member {String} projectName
 */
ClientProjectInfoVo.prototype.projectName = undefined;

/**
 * 项目角色关联关系的id
 * @member {String} projectRelId
 */
ClientProjectInfoVo.prototype.projectRelId = undefined;

/**
 * 项目授权的角色id
 * @member {String} projectRoleId
 */
ClientProjectInfoVo.prototype.projectRoleId = undefined;

/**
 * 角色名称
 * @member {String} roleName
 */
ClientProjectInfoVo.prototype.roleName = undefined;


