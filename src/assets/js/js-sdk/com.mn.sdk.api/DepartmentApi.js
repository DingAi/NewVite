/*
 * 系统接口
 * 系统接口文档
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 4.0.0
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient";
import {DepartForm} from '../com.mn.sdk.model/DepartForm';
import {ResultListDepartment} from '../com.mn.sdk.model/ResultListDepartment';
import {ResultObject} from '../com.mn.sdk.model/ResultObject';

/**
* Department service.
* @module com.mn.sdk.api/DepartmentApi
* @version 1.0
*/
export class DepartmentApi {

    /**
    * Constructs a new DepartmentApi. 
    * @alias module:com.mn.sdk.api/DepartmentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * 新增部门
     * 新增部门
     * @param {module:com.mn.sdk.model/DepartForm} departForm departForm
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.mn.sdk.model/ResultObject} and HTTP response
     */
    addDepartmentWithHttpInfo(departForm) {
      let postBody = departForm;

      // verify the required parameter 'departForm' is set
      if (departForm === undefined || departForm === null) {
        throw new Error("Missing the required parameter 'departForm' when calling addDepartment");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = ResultObject;

      return this.apiClient.callApi(
        '/api-organization/dept/addDepartment', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * 新增部门
     * 新增部门
     * @param {module:com.mn.sdk.model/DepartForm} departForm departForm
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.mn.sdk.model/ResultObject}
     */
    addDepartment(departForm) {
      return this.addDepartmentWithHttpInfo(departForm)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * 删除部门
     * 根据部门Id删除部门
     * @param {String} deptId 部门ID
     * @param {Object} opts Optional parameters
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.mn.sdk.model/ResultObject} and HTTP response
     */
    deleteDepartmentWithHttpInfo(deptId) {
        let postBody = {};
        postBody["deptId"] = deptId;

      // verify the required parameter 'deptId' is set
      if (deptId === undefined || deptId === null) {
        throw new Error("Missing the required parameter 'deptId' when calling deleteDepartment");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = ResultObject;

      return this.apiClient.callApi(
        '/api-organization/dept/deleteDepartment', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * 删除部门
     * 根据部门Id删除部门
     * @param {String} deptId 部门ID
     * @param {Object} opts Optional parameters
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.mn.sdk.model/ResultObject}
     */
    deleteDepartment(deptId) {
      return this.deleteDepartmentWithHttpInfo(deptId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * 获取部门列表
     * 根据当前登录用户ID查询所在部门及子部门
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.mn.sdk.model/ResultListDepartment} and HTTP response
     */
    getDepartmentListWithHttpInfo() {
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = ResultListDepartment;

      return this.apiClient.callApi(
        '/api-organization/dept/getDepartmentList', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * 获取部门列表
     * 根据当前登录用户ID查询所在部门及子部门
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.mn.sdk.model/ResultListDepartment}
     */
    getDepartmentList() {
      return this.getDepartmentListWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * 修改部门
     * 修改部门
     * @param {module:com.mn.sdk.model/DepartForm} departForm departForm
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.mn.sdk.model/ResultObject} and HTTP response
     */
    updateDepartmentWithHttpInfo(departForm) {
      let postBody = departForm;

      // verify the required parameter 'departForm' is set
      if (departForm === undefined || departForm === null) {
        throw new Error("Missing the required parameter 'departForm' when calling updateDepartment");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = ResultObject;

      return this.apiClient.callApi(
        '/api-organization/dept/updateDepartment', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * 修改部门
     * 修改部门
     * @param {module:com.mn.sdk.model/DepartForm} departForm departForm
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.mn.sdk.model/ResultObject}
     */
    updateDepartment(departForm) {
      return this.updateDepartmentWithHttpInfo(departForm)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
